ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB142:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include "stm32f4xx.h"
  26:Core/Src/main.c **** #include "stm32f4xx_hal_tim.h"
  27:Core/Src/main.c **** #include "lcd_stm32f4.h"
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** // TODO: Add values for below variables
  38:Core/Src/main.c **** #define NS    128U    // Number of samples in LUT
  39:Core/Src/main.c **** #define TIM2CLK 16000000UL  // STM Clock frequency: Hint You might want to check the ioc file
  40:Core/Src/main.c **** #define F_SIGNAL  1000UL	// Frequency of output analog signal --- DAC UPDATE RATE 1MS/s - from Data
  41:Core/Src/main.c **** #define NUM_WAVEFORMS 6
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  51:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  52:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_ch1;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** // TODO: Add code for global variables, including LUTs
  56:Core/Src/main.c **** uint32_t sine_LUT[NS]= {2047, 2147, 2248, 2347, 2446, 2545, 2641, 2737, 2831, 2922, 3012, 3100, 318
  57:Core/Src/main.c **** uint32_t saw_LUT[NS] = {0, 32, 64, 96, 128, 161, 193, 225, 257, 290, 322, 354, 386, 419, 451, 483, 
  58:Core/Src/main.c **** uint32_t triangle_LUT[NS] = {0, 127, 255, 383, 511, 639, 767, 895, 1023, 1151, 1279, 1407, 1535, 16
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** uint32_t piano_LUT[NS] = {
  61:Core/Src/main.c ****    2047, 2183, 1984, 2098, 2061, 2088, 2038, 2158,
  62:Core/Src/main.c ****    2097, 2153, 2084, 2054, 2016, 2333, 2059, 1765,
  63:Core/Src/main.c ****    2027, 2045, 1970, 2055, 2063, 2051, 1583, 2022,
  64:Core/Src/main.c ****    2334, 2044, 2884, 1692, 1759, 1843, 2242, 2195,
  65:Core/Src/main.c ****    1531, 2163, 1969, 2061, 1987, 2088, 1733, 1952,
  66:Core/Src/main.c ****    1934, 2101, 2252, 1924, 2253, 1929, 2616, 2030,
  67:Core/Src/main.c ****    2097, 2063, 1985, 2063, 2024, 2037, 2818, 1944,
  68:Core/Src/main.c ****    2393, 1867, 2000, 1949, 1472, 1911, 1691, 2035,
  69:Core/Src/main.c ****    1778, 2070, 2143, 2047, 2015, 2021, 1718, 2153,
  70:Core/Src/main.c ****    1902, 2086, 1794, 2456, 2201, 2032, 2360, 2175,
  71:Core/Src/main.c ****    2027, 2043, 2004, 2072, 2034, 2041, 2187, 2053,
  72:Core/Src/main.c ****    2089, 1928, 1843, 2034, 2011, 2226, 2009, 2107,
  73:Core/Src/main.c ****    2347, 2052, 2077, 2038, 2071, 2023, 1754, 1922,
  74:Core/Src/main.c ****    1992, 1996, 2162, 2084, 2036, 1999, 1837, 2150,
  75:Core/Src/main.c ****    2005, 2079, 1997, 2072, 2031, 2060, 1942, 1911,
  76:Core/Src/main.c ****    1604, 1780, 2077, 2056, 2001, 1938, 2094, 2047,
  77:Core/Src/main.c **** };
  78:Core/Src/main.c **** uint32_t guitar_LUT[NS] = {
  79:Core/Src/main.c ****    2047, 2362, 2360, 2123, 2097, 1861, 1833, 2015,
  80:Core/Src/main.c ****    1534, 2092, 2080, 2052, 2087, 2075, 1893, 2036,
  81:Core/Src/main.c ****    2043, 2027, 1705, 2501, 1916, 1896, 2466, 2231,
  82:Core/Src/main.c ****    1775, 2052, 2015, 2062, 2036, 1994, 1964, 2054,
  83:Core/Src/main.c ****    2052, 2098, 1856, 2149, 1858, 2127, 2003, 1750,
  84:Core/Src/main.c ****    2249, 2024, 2056, 2052, 2064, 1933, 2144, 2041,
  85:Core/Src/main.c ****    1876, 2006, 2183, 2009, 2191, 2143, 1891, 2005,
  86:Core/Src/main.c ****    2146, 2139, 2095, 1827, 2163, 2097, 2761, 2230,
  87:Core/Src/main.c ****    2106, 2230, 2269, 2247, 2138, 2119, 1591, 1686,
  88:Core/Src/main.c ****    2065, 2040, 2079, 2063, 2268, 2044, 2032, 2056,
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 3


  89:Core/Src/main.c ****    2165, 2180, 1801, 2129, 2079, 1737, 2126, 1881,
  90:Core/Src/main.c ****    2087, 2101, 2046, 2033, 1959, 1889, 2115, 2045,
  91:Core/Src/main.c ****    2289, 1971, 2244, 1984, 2030, 2005, 2520, 2424,
  92:Core/Src/main.c ****    2011, 2052, 2034, 2041, 2117, 1936, 2045, 2051,
  93:Core/Src/main.c ****    1932, 2027, 2157, 1895, 2298, 1944, 2213, 1654,
  94:Core/Src/main.c ****    2105, 1854, 2386, 1905, 1640, 2618, 1933, 2048,
  95:Core/Src/main.c **** };
  96:Core/Src/main.c **** uint32_t drum_LUT[NS] = {
  97:Core/Src/main.c **** 		   2047, 3396, 1864, 2110, 2063, 3400, 1893, 1933,
  98:Core/Src/main.c **** 		   2086, 2144, 2036, 2030, 2039, 1949, 1414, 1848,
  99:Core/Src/main.c **** 		   2091, 2032, 2044, 2059, 2048, 2093, 2044, 2020,
 100:Core/Src/main.c **** 		   2094, 1803, 2072, 2045, 2173, 2017, 3235, 1276,
 101:Core/Src/main.c **** 		   1671, 2193, 2436, 2104, 1931, 2062, 2028, 2032,
 102:Core/Src/main.c **** 		   4095, 1922, 2035, 2042, 2502, 2372, 1820, 1996,
 103:Core/Src/main.c **** 		   2284, 2072, 2018, 2051, 671, 2425, 2075, 2068,
 104:Core/Src/main.c **** 		   17, 2239, 2042, 2023, 2192, 2052, 2902, 2386,
 105:Core/Src/main.c **** 		   4073, 2009, 2285, 2038, 2518, 2711, 2048, 2096,
 106:Core/Src/main.c **** 		   1629, 2001, 2086, 2043, 2549, 1894, 2061, 2076,
 107:Core/Src/main.c **** 		   2001, 2055, 2043, 2049, 2098, 2047, 2065, 2047,
 108:Core/Src/main.c **** 		   2923, 2071, 2017, 2080, 2018, 2049, 1831, 2014,
 109:Core/Src/main.c **** 		   837, 2295, 1978, 2040, 1980, 2036, 2106, 2042,
 110:Core/Src/main.c **** 		   1643, 2055, 2066, 2032, 2050, 2442, 2145, 2218,
 111:Core/Src/main.c **** 		   2126, 2032, 2038, 1781, 2154, 2441, 2132, 4095,
 112:Core/Src/main.c **** 		   2150, 2012, 2036, 1615, 1981, 323, 2525, 2047,
 113:Core/Src/main.c **** 		};
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** // TODO: Equation to calculate TIM2_Ticks
 120:Core/Src/main.c **** uint32_t TIM2_Ticks = 125; // How often to write new LUT value -- TIM2CLK/NS*FSIGNAL
 121:Core/Src/main.c **** uint32_t DestAddress = (uint32_t) &(TIM3->CCR3); // Write LUT TO TIM3->CCR3 to modify PWM duty cycl
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** uint32_t *waveforms[NUM_WAVEFORMS] = {
 125:Core/Src/main.c ****     sine_LUT, saw_LUT, triangle_LUT, piano_LUT, guitar_LUT, drum_LUT
 126:Core/Src/main.c **** };
 127:Core/Src/main.c **** char *waveform_names[NUM_WAVEFORMS] = {
 128:Core/Src/main.c ****     "Sine", "Sawtooth", "Triangle", "Piano", "Guitar", "Drum"
 129:Core/Src/main.c **** };
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** volatile uint8_t waveform_index = 0;
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** // --- Debounce support ---
 134:Core/Src/main.c **** volatile uint32_t last_button_press = 0;
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** /* USER CODE END PV */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 140:Core/Src/main.c **** void SystemClock_Config(void);
 141:Core/Src/main.c **** static void MX_GPIO_Init(void);
 142:Core/Src/main.c **** static void MX_DMA_Init(void);
 143:Core/Src/main.c **** static void MX_TIM2_Init(void);
 144:Core/Src/main.c **** static void MX_TIM3_Init(void);
 145:Core/Src/main.c **** /* USER CODE BEGIN PFP */
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 4


 146:Core/Src/main.c **** void EXTI0_IRQHandler(void);
 147:Core/Src/main.c **** /* USER CODE END PFP */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 150:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** /* USER CODE END 0 */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** /**
 155:Core/Src/main.c ****   * @brief  The application entry point.
 156:Core/Src/main.c ****   * @retval int
 157:Core/Src/main.c ****   */
 158:Core/Src/main.c **** int main(void)
 159:Core/Src/main.c **** {
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* USER CODE END 1 */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 168:Core/Src/main.c ****   HAL_Init();
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /* USER CODE END Init */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* Configure the system clock */
 175:Core/Src/main.c ****   SystemClock_Config();
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* USER CODE END SysInit */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* Initialize all configured peripherals */
 182:Core/Src/main.c ****   MX_GPIO_Init();
 183:Core/Src/main.c ****   MX_DMA_Init();
 184:Core/Src/main.c ****   MX_TIM2_Init();
 185:Core/Src/main.c ****   MX_TIM3_Init();
 186:Core/Src/main.c ****   init_LCD();
 187:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 188:Core/Src/main.c ****   // TODO: Start TIM3 in PWM mode on channel 3
 189:Core/Src/main.c ****   	 if(HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_3) != HAL_OK){
 190:Core/Src/main.c ****   		 Error_Handler();
 191:Core/Src/main.c ****   	 }
 192:Core/Src/main.c ****   // TODO: Start TIM2 in Output Compare (OC) mode on channel 1
 193:Core/Src/main.c ****   	 if(HAL_TIM_OC_Start(&htim2,TIM_CHANNEL_1) != HAL_OK){
 194:Core/Src/main.c ****   		 Error_Handler();
 195:Core/Src/main.c ****   	 }
 196:Core/Src/main.c ****   // TODO: Start DMA in IT mode on TIM2->CH1. Source is LUT and Dest is TIM3->CCR3; start with Sine
 197:Core/Src/main.c ****   	 if(HAL_DMA_Start_IT(&hdma_tim2_ch1,	//source memory address
 198:Core/Src/main.c ****   			 	 	 	 (uint32_t)sine_LUT,
 199:Core/Src/main.c **** 						 (uint32_t)&(htim3.Instance->CCR3),NS) != HAL_OK) //destination address
 200:Core/Src/main.c ****   	 {
 201:Core/Src/main.c ****   		 Error_Handler();
 202:Core/Src/main.c ****   	 }
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 5


 203:Core/Src/main.c ****   // TODO: Write current waveform to LCD(Sine is the first waveform)
 204:Core/Src/main.c ****   	init_LCD();
 205:Core/Src/main.c ****   	lcd_putstring("Sine");
 206:Core/Src/main.c ****   // TODO: Enable DMA (start transfer from LUT to CCR)
 207:Core/Src/main.c ****   	__HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC1);
 208:Core/Src/main.c ****   /* USER CODE END 2 */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* Infinite loop */
 211:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 212:Core/Src/main.c ****   while (1)
 213:Core/Src/main.c ****   {
 214:Core/Src/main.c ****     /* USER CODE END WHILE */
 215:Core/Src/main.c **** 	  // The DMA + TIM2 hardware is doing the waveform generation; CPU can be idle or do other tasks
 216:Core/Src/main.c **** 	 HAL_Delay(1000);
 217:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 218:Core/Src/main.c ****   }
 219:Core/Src/main.c ****   /* USER CODE END 3 */
 220:Core/Src/main.c **** }
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** /**
 223:Core/Src/main.c ****   * @brief System Clock Configuration
 224:Core/Src/main.c ****   * @retval None
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c **** void SystemClock_Config(void)
 227:Core/Src/main.c **** {
 228:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 229:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 232:Core/Src/main.c ****   */
 233:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 234:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 237:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 238:Core/Src/main.c ****   */
 239:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 240:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 241:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 242:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 243:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 244:Core/Src/main.c ****   {
 245:Core/Src/main.c ****     Error_Handler();
 246:Core/Src/main.c ****   }
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 249:Core/Src/main.c ****   */
 250:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 251:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 252:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 253:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 254:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 255:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 258:Core/Src/main.c ****   {
 259:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 6


 260:Core/Src/main.c ****   }
 261:Core/Src/main.c **** }
 262:Core/Src/main.c **** 
 263:Core/Src/main.c **** /**
 264:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 265:Core/Src/main.c ****   * @param None
 266:Core/Src/main.c ****   * @retval None
 267:Core/Src/main.c ****   */
 268:Core/Src/main.c **** static void MX_TIM2_Init(void)
 269:Core/Src/main.c **** {
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 276:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 277:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 282:Core/Src/main.c ****   htim2.Instance = TIM2;
 283:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 284:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 285:Core/Src/main.c ****   htim2.Init.Period = TIM2_Ticks - 1;
 286:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 287:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 288:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 289:Core/Src/main.c ****   {
 290:Core/Src/main.c ****     Error_Handler();
 291:Core/Src/main.c ****   }
 292:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 293:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 294:Core/Src/main.c ****   {
 295:Core/Src/main.c ****     Error_Handler();
 296:Core/Src/main.c ****   }
 297:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 298:Core/Src/main.c ****   {
 299:Core/Src/main.c ****     Error_Handler();
 300:Core/Src/main.c ****   }
 301:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 302:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 303:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 304:Core/Src/main.c ****   {
 305:Core/Src/main.c ****     Error_Handler();
 306:Core/Src/main.c ****   }
 307:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 308:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 309:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 310:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 311:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 312:Core/Src/main.c ****   {
 313:Core/Src/main.c ****     Error_Handler();
 314:Core/Src/main.c ****   }
 315:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 316:Core/Src/main.c ****   /* TIM2_CH1 DMA Init */
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 7


 317:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   hdma_tim2_ch1.Instance = DMA1_Stream5;
 320:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 321:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 322:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 323:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 324:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 325:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 326:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 327:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 328:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   if (HAL_DMA_Init(&hdma_tim2_ch1) != HAL_OK)
 331:Core/Src/main.c ****   {
 332:Core/Src/main.c ****       Error_Handler();
 333:Core/Src/main.c ****   }
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /* Link DMA handle to TIM2 handle */
 336:Core/Src/main.c ****   __HAL_LINKDMA(&htim2, hdma[TIM_DMA_ID_CC1], hdma_tim2_ch1);
 337:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 338:Core/Src/main.c **** 
 339:Core/Src/main.c **** }
 340:Core/Src/main.c **** 
 341:Core/Src/main.c **** /**
 342:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 343:Core/Src/main.c ****   * @param None
 344:Core/Src/main.c ****   * @retval None
 345:Core/Src/main.c ****   */
 346:Core/Src/main.c **** static void MX_TIM3_Init(void)
 347:Core/Src/main.c **** {
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 354:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 355:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 360:Core/Src/main.c ****   htim3.Instance = TIM3;
 361:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 362:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 363:Core/Src/main.c ****   htim3.Init.Period = 65535;
 364:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 365:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 366:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 367:Core/Src/main.c ****   {
 368:Core/Src/main.c ****     Error_Handler();
 369:Core/Src/main.c ****   }
 370:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 371:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 372:Core/Src/main.c ****   {
 373:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 8


 374:Core/Src/main.c ****   }
 375:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 376:Core/Src/main.c ****   {
 377:Core/Src/main.c ****     Error_Handler();
 378:Core/Src/main.c ****   }
 379:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 380:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 381:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 382:Core/Src/main.c ****   {
 383:Core/Src/main.c ****     Error_Handler();
 384:Core/Src/main.c ****   }
 385:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 386:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 387:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 388:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 389:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 390:Core/Src/main.c ****   {
 391:Core/Src/main.c ****     Error_Handler();
 392:Core/Src/main.c ****   }
 393:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 396:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 397:Core/Src/main.c **** 
 398:Core/Src/main.c **** }
 399:Core/Src/main.c **** 
 400:Core/Src/main.c **** /**
 401:Core/Src/main.c ****   * Enable DMA controller clock
 402:Core/Src/main.c ****   */
 403:Core/Src/main.c **** static void MX_DMA_Init(void)
 404:Core/Src/main.c **** {
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****   /* DMA controller clock enable */
 407:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   /* DMA interrupt init */
 410:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 411:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 412:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 413:Core/Src/main.c **** 
 414:Core/Src/main.c **** }
 415:Core/Src/main.c **** 
 416:Core/Src/main.c **** /**
 417:Core/Src/main.c ****   * @brief GPIO Initialization Function
 418:Core/Src/main.c ****   * @param None
 419:Core/Src/main.c ****   * @retval None
 420:Core/Src/main.c ****   */
 421:Core/Src/main.c **** static void MX_GPIO_Init(void)
 422:Core/Src/main.c **** {
  28              		.loc 1 422 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 36
  35              		.cfi_offset 4, -36
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 9


  36              		.cfi_offset 5, -32
  37              		.cfi_offset 6, -28
  38              		.cfi_offset 7, -24
  39              		.cfi_offset 8, -20
  40              		.cfi_offset 9, -16
  41              		.cfi_offset 10, -12
  42              		.cfi_offset 11, -8
  43              		.cfi_offset 14, -4
  44 0004 89B0     		sub	sp, sp, #36
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 72
 423:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  47              		.loc 1 423 3 view .LVU1
  48              		.loc 1 423 20 is_stmt 0 view .LVU2
  49 0006 0024     		movs	r4, #0
  50 0008 0394     		str	r4, [sp, #12]
  51 000a 0494     		str	r4, [sp, #16]
  52 000c 0594     		str	r4, [sp, #20]
  53 000e 0694     		str	r4, [sp, #24]
  54 0010 0794     		str	r4, [sp, #28]
 424:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 427:Core/Src/main.c **** 
 428:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 429:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  55              		.loc 1 429 3 is_stmt 1 view .LVU3
  56              	.LBB4:
  57              		.loc 1 429 3 view .LVU4
  58 0012 0094     		str	r4, [sp]
  59              		.loc 1 429 3 view .LVU5
  60 0014 2F4B     		ldr	r3, .L3
  61 0016 1A6B     		ldr	r2, [r3, #48]
  62 0018 42F08002 		orr	r2, r2, #128
  63 001c 1A63     		str	r2, [r3, #48]
  64              		.loc 1 429 3 view .LVU6
  65 001e 1A6B     		ldr	r2, [r3, #48]
  66 0020 02F08002 		and	r2, r2, #128
  67 0024 0092     		str	r2, [sp]
  68              		.loc 1 429 3 view .LVU7
  69 0026 009A     		ldr	r2, [sp]
  70              	.LBE4:
  71              		.loc 1 429 3 view .LVU8
 430:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  72              		.loc 1 430 3 view .LVU9
  73              	.LBB5:
  74              		.loc 1 430 3 view .LVU10
  75 0028 0194     		str	r4, [sp, #4]
  76              		.loc 1 430 3 view .LVU11
  77 002a 1A6B     		ldr	r2, [r3, #48]
  78 002c 42F00102 		orr	r2, r2, #1
  79 0030 1A63     		str	r2, [r3, #48]
  80              		.loc 1 430 3 view .LVU12
  81 0032 1A6B     		ldr	r2, [r3, #48]
  82 0034 02F00102 		and	r2, r2, #1
  83 0038 0192     		str	r2, [sp, #4]
  84              		.loc 1 430 3 view .LVU13
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 10


  85 003a 019A     		ldr	r2, [sp, #4]
  86              	.LBE5:
  87              		.loc 1 430 3 view .LVU14
 431:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  88              		.loc 1 431 3 view .LVU15
  89              	.LBB6:
  90              		.loc 1 431 3 view .LVU16
  91 003c 0294     		str	r4, [sp, #8]
  92              		.loc 1 431 3 view .LVU17
  93 003e 1A6B     		ldr	r2, [r3, #48]
  94 0040 42F00202 		orr	r2, r2, #2
  95 0044 1A63     		str	r2, [r3, #48]
  96              		.loc 1 431 3 view .LVU18
  97 0046 1B6B     		ldr	r3, [r3, #48]
  98 0048 03F00203 		and	r3, r3, #2
  99 004c 0293     		str	r3, [sp, #8]
 100              		.loc 1 431 3 view .LVU19
 101 004e 029B     		ldr	r3, [sp, #8]
 102              	.LBE6:
 103              		.loc 1 431 3 view .LVU20
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   // -------------------------------
 434:Core/Src/main.c ****   // LCD pins configuration
 435:Core/Src/main.c ****   // -------------------------------
 436:Core/Src/main.c ****   // Configure PC14 (RS) and PC15 (E) as output push-pull
 437:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_14 | GPIO_PIN_15;
 104              		.loc 1 437 3 view .LVU21
 105              		.loc 1 437 23 is_stmt 0 view .LVU22
 106 0050 4FF4404B 		mov	fp, #49152
 107 0054 CDF80CB0 		str	fp, [sp, #12]
 438:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 108              		.loc 1 438 3 is_stmt 1 view .LVU23
 109              		.loc 1 438 24 is_stmt 0 view .LVU24
 110 0058 0126     		movs	r6, #1
 111 005a 0496     		str	r6, [sp, #16]
 439:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 439 3 is_stmt 1 view .LVU25
 440:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 113              		.loc 1 440 3 view .LVU26
 441:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 114              		.loc 1 441 3 view .LVU27
 115 005c DFF87CA0 		ldr	r10, .L3+8
 116 0060 03A9     		add	r1, sp, #12
 117 0062 5046     		mov	r0, r10
 118 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 119              	.LVL0:
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   // Configure PB8 (D4) and PB9 (D5) as output push-pull
 444:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8 | GPIO_PIN_9;
 120              		.loc 1 444 3 view .LVU28
 121              		.loc 1 444 23 is_stmt 0 view .LVU29
 122 0068 4FF44079 		mov	r9, #768
 123 006c CDF80C90 		str	r9, [sp, #12]
 445:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 124              		.loc 1 445 3 is_stmt 1 view .LVU30
 125 0070 DFF86C80 		ldr	r8, .L3+12
 126 0074 03A9     		add	r1, sp, #12
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 11


 127 0076 4046     		mov	r0, r8
 128 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 129              	.LVL1:
 446:Core/Src/main.c **** 
 447:Core/Src/main.c ****   // Configure PA12 (D6) and PA15 (D7) as output push-pull
 448:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12 | GPIO_PIN_15;
 130              		.loc 1 448 3 view .LVU31
 131              		.loc 1 448 23 is_stmt 0 view .LVU32
 132 007c 4FF41047 		mov	r7, #36864
 133 0080 0397     		str	r7, [sp, #12]
 449:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 134              		.loc 1 449 3 is_stmt 1 view .LVU33
 135 0082 154D     		ldr	r5, .L3+4
 136 0084 03A9     		add	r1, sp, #12
 137 0086 2846     		mov	r0, r5
 138 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 139              	.LVL2:
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   // Set all LCD pins LOW initially
 452:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14 | GPIO_PIN_15, GPIO_PIN_RESET);
 140              		.loc 1 452 3 view .LVU34
 141 008c 2246     		mov	r2, r4
 142 008e 5946     		mov	r1, fp
 143 0090 5046     		mov	r0, r10
 144 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 145              	.LVL3:
 453:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8 | GPIO_PIN_9, GPIO_PIN_RESET);
 146              		.loc 1 453 3 view .LVU35
 147 0096 2246     		mov	r2, r4
 148 0098 4946     		mov	r1, r9
 149 009a 4046     		mov	r0, r8
 150 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 151              	.LVL4:
 454:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_12 | GPIO_PIN_15, GPIO_PIN_RESET);
 152              		.loc 1 454 3 view .LVU36
 153 00a0 2246     		mov	r2, r4
 154 00a2 3946     		mov	r1, r7
 155 00a4 2846     		mov	r0, r5
 156 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 157              	.LVL5:
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   // -------------------------------
 458:Core/Src/main.c ****   // Button0 configuration (PA0)
 459:Core/Src/main.c ****   // -------------------------------
 460:Core/Src/main.c ****   GPIO_InitStruct.Pin = Button0_Pin;
 158              		.loc 1 460 3 view .LVU37
 159              		.loc 1 460 23 is_stmt 0 view .LVU38
 160 00aa 0396     		str	r6, [sp, #12]
 461:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING; // Interrupt on rising edge
 161              		.loc 1 461 3 is_stmt 1 view .LVU39
 162              		.loc 1 461 24 is_stmt 0 view .LVU40
 163 00ac 4FF48813 		mov	r3, #1114112
 164 00b0 0493     		str	r3, [sp, #16]
 462:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;         // Use pull-up resistor
 165              		.loc 1 462 3 is_stmt 1 view .LVU41
 166              		.loc 1 462 24 is_stmt 0 view .LVU42
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 12


 167 00b2 0596     		str	r6, [sp, #20]
 463:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 168              		.loc 1 463 3 is_stmt 1 view .LVU43
 169 00b4 03A9     		add	r1, sp, #12
 170 00b6 2846     		mov	r0, r5
 171 00b8 FFF7FEFF 		bl	HAL_GPIO_Init
 172              	.LVL6:
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   // Enable and set EXTI line 0 interrupt priority
 466:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);
 173              		.loc 1 466 3 view .LVU44
 174 00bc 2246     		mov	r2, r4
 175 00be 0221     		movs	r1, #2
 176 00c0 0620     		movs	r0, #6
 177 00c2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 178              	.LVL7:
 467:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 179              		.loc 1 467 3 view .LVU45
 180 00c6 0620     		movs	r0, #6
 181 00c8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 182              	.LVL8:
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 470:Core/Src/main.c **** }
 183              		.loc 1 470 1 is_stmt 0 view .LVU46
 184 00cc 09B0     		add	sp, sp, #36
 185              	.LCFI2:
 186              		.cfi_def_cfa_offset 36
 187              		@ sp needed
 188 00ce BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 189              	.L4:
 190 00d2 00BF     		.align	2
 191              	.L3:
 192 00d4 00380240 		.word	1073887232
 193 00d8 00000240 		.word	1073872896
 194 00dc 00080240 		.word	1073874944
 195 00e0 00040240 		.word	1073873920
 196              		.cfi_endproc
 197              	.LFE142:
 199              		.section	.text.MX_DMA_Init,"ax",%progbits
 200              		.align	1
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 205              	MX_DMA_Init:
 206              	.LFB141:
 404:Core/Src/main.c **** 
 207              		.loc 1 404 1 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 8
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 00B5     		push	{lr}
 212              	.LCFI3:
 213              		.cfi_def_cfa_offset 4
 214              		.cfi_offset 14, -4
 215 0002 83B0     		sub	sp, sp, #12
 216              	.LCFI4:
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 13


 217              		.cfi_def_cfa_offset 16
 407:Core/Src/main.c **** 
 218              		.loc 1 407 3 view .LVU48
 219              	.LBB7:
 407:Core/Src/main.c **** 
 220              		.loc 1 407 3 view .LVU49
 221 0004 0021     		movs	r1, #0
 222 0006 0191     		str	r1, [sp, #4]
 407:Core/Src/main.c **** 
 223              		.loc 1 407 3 view .LVU50
 224 0008 094B     		ldr	r3, .L7
 225 000a 1A6B     		ldr	r2, [r3, #48]
 226 000c 42F40012 		orr	r2, r2, #2097152
 227 0010 1A63     		str	r2, [r3, #48]
 407:Core/Src/main.c **** 
 228              		.loc 1 407 3 view .LVU51
 229 0012 1B6B     		ldr	r3, [r3, #48]
 230 0014 03F40013 		and	r3, r3, #2097152
 231 0018 0193     		str	r3, [sp, #4]
 407:Core/Src/main.c **** 
 232              		.loc 1 407 3 view .LVU52
 233 001a 019B     		ldr	r3, [sp, #4]
 234              	.LBE7:
 407:Core/Src/main.c **** 
 235              		.loc 1 407 3 view .LVU53
 411:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 236              		.loc 1 411 3 view .LVU54
 237 001c 0A46     		mov	r2, r1
 238 001e 1020     		movs	r0, #16
 239 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 240              	.LVL9:
 412:Core/Src/main.c **** 
 241              		.loc 1 412 3 view .LVU55
 242 0024 1020     		movs	r0, #16
 243 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 244              	.LVL10:
 414:Core/Src/main.c **** 
 245              		.loc 1 414 1 is_stmt 0 view .LVU56
 246 002a 03B0     		add	sp, sp, #12
 247              	.LCFI5:
 248              		.cfi_def_cfa_offset 4
 249              		@ sp needed
 250 002c 5DF804FB 		ldr	pc, [sp], #4
 251              	.L8:
 252              		.align	2
 253              	.L7:
 254 0030 00380240 		.word	1073887232
 255              		.cfi_endproc
 256              	.LFE141:
 258              		.section	.text.Error_Handler,"ax",%progbits
 259              		.align	1
 260              		.global	Error_Handler
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 265              	Error_Handler:
 266              	.LFB144:
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 14


 471:Core/Src/main.c **** 
 472:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 473:Core/Src/main.c **** void EXTI0_IRQHandler(void){
 474:Core/Src/main.c **** 
 475:Core/Src/main.c **** 	// TODO: Debounce using HAL_GetTick()
 476:Core/Src/main.c **** 
 477:Core/Src/main.c **** 
 478:Core/Src/main.c **** 	// TODO: Disable DMA transfer and abort IT, then start DMA in IT mode with new LUT and re-enable t
 479:Core/Src/main.c **** 	// HINT: Consider using C's "switch" function to handle LUT changes
 480:Core/Src/main.c **** 	 if(__HAL_GPIO_EXTI_GET_IT(GPIO_PIN_0) != RESET)
 481:Core/Src/main.c **** 	    {
 482:Core/Src/main.c **** 	        __HAL_GPIO_EXTI_CLEAR_IT(GPIO_PIN_0);
 483:Core/Src/main.c **** 
 484:Core/Src/main.c **** 	        uint32_t now = HAL_GetTick(); // current time in ms
 485:Core/Src/main.c **** 	        if ((now - last_button_press) < 200) {
 486:Core/Src/main.c **** 	            // Ignore if pressed again within 200 ms
 487:Core/Src/main.c **** 	            return;
 488:Core/Src/main.c **** 	        }
 489:Core/Src/main.c **** 	        last_button_press = now;
 490:Core/Src/main.c **** 
 491:Core/Src/main.c **** 	        // --- Disable DMA safely before switching ---
 492:Core/Src/main.c **** 	        __HAL_TIM_DISABLE_DMA(&htim2, TIM_DMA_CC1);
 493:Core/Src/main.c **** 	        HAL_DMA_Abort_IT(htim2.hdma[1]); // channel 1 for TIM2 CC1
 494:Core/Src/main.c **** 
 495:Core/Src/main.c **** 	        // --- Move to next waveform ---
 496:Core/Src/main.c **** 	        waveform_index = (waveform_index + 1) % NUM_WAVEFORMS;
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** 	        // --- Restart DMA transfer with new LUT ---
 499:Core/Src/main.c **** 	        if (HAL_TIM_OC_Start_DMA(&htim2,
 500:Core/Src/main.c **** 	                                 TIM_CHANNEL_1,
 501:Core/Src/main.c **** 	                                 waveforms[waveform_index],
 502:Core/Src/main.c **** 	                                 NS) != HAL_OK)
 503:Core/Src/main.c **** 	        {
 504:Core/Src/main.c **** 	            Error_Handler();
 505:Core/Src/main.c **** 	        }
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** 	        // --- Update LCD ---
 508:Core/Src/main.c **** 	        lcd_command(CLEAR);
 509:Core/Src/main.c **** 	        lcd_putstring((char*)waveform_names[waveform_index]);
 510:Core/Src/main.c **** 	    }
 511:Core/Src/main.c **** 
 512:Core/Src/main.c **** 
 513:Core/Src/main.c **** }
 514:Core/Src/main.c **** /* USER CODE END 4 */
 515:Core/Src/main.c **** 
 516:Core/Src/main.c **** /**
 517:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 518:Core/Src/main.c ****   * @retval None
 519:Core/Src/main.c ****   */
 520:Core/Src/main.c **** void Error_Handler(void)
 521:Core/Src/main.c **** {
 267              		.loc 1 521 1 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ Volatile: function does not return.
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 15


 522:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 523:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 524:Core/Src/main.c ****   __disable_irq();
 273              		.loc 1 524 3 view .LVU58
 274              	.LBB8:
 275              	.LBI8:
 276              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 16


  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 17


 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 18


 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 19


 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 20


 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 21


 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 22


 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 23


 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 24


 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 25


 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 26


 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 27


 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 28


 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 29


 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 30


 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 31


 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 277              		.loc 2 960 27 view .LVU59
 278              	.LBB9:
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 32


 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 279              		.loc 2 962 3 view .LVU60
 280              		.syntax unified
 281              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 282 0000 72B6     		cpsid i
 283              	@ 0 "" 2
 284              		.thumb
 285              		.syntax unified
 286              	.L10:
 287              	.LBE9:
 288              	.LBE8:
 525:Core/Src/main.c ****   while (1)
 289              		.loc 1 525 3 view .LVU61
 526:Core/Src/main.c ****   {
 527:Core/Src/main.c ****   }
 290              		.loc 1 527 3 view .LVU62
 525:Core/Src/main.c ****   while (1)
 291              		.loc 1 525 9 view .LVU63
 292 0002 FEE7     		b	.L10
 293              		.cfi_endproc
 294              	.LFE144:
 296              		.section	.text.MX_TIM2_Init,"ax",%progbits
 297              		.align	1
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 302              	MX_TIM2_Init:
 303              	.LFB139:
 269:Core/Src/main.c **** 
 304              		.loc 1 269 1 view -0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 56
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308 0000 00B5     		push	{lr}
 309              	.LCFI6:
 310              		.cfi_def_cfa_offset 4
 311              		.cfi_offset 14, -4
 312 0002 8FB0     		sub	sp, sp, #60
 313              	.LCFI7:
 314              		.cfi_def_cfa_offset 64
 275:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 315              		.loc 1 275 3 view .LVU65
 275:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 316              		.loc 1 275 26 is_stmt 0 view .LVU66
 317 0004 0023     		movs	r3, #0
 318 0006 0A93     		str	r3, [sp, #40]
 319 0008 0B93     		str	r3, [sp, #44]
 320 000a 0C93     		str	r3, [sp, #48]
 321 000c 0D93     		str	r3, [sp, #52]
 276:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 322              		.loc 1 276 3 is_stmt 1 view .LVU67
 276:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 323              		.loc 1 276 27 is_stmt 0 view .LVU68
 324 000e 0893     		str	r3, [sp, #32]
 325 0010 0993     		str	r3, [sp, #36]
 277:Core/Src/main.c **** 
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 33


 326              		.loc 1 277 3 is_stmt 1 view .LVU69
 277:Core/Src/main.c **** 
 327              		.loc 1 277 22 is_stmt 0 view .LVU70
 328 0012 0193     		str	r3, [sp, #4]
 329 0014 0293     		str	r3, [sp, #8]
 330 0016 0393     		str	r3, [sp, #12]
 331 0018 0493     		str	r3, [sp, #16]
 332 001a 0593     		str	r3, [sp, #20]
 333 001c 0693     		str	r3, [sp, #24]
 334 001e 0793     		str	r3, [sp, #28]
 282:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 335              		.loc 1 282 3 is_stmt 1 view .LVU71
 282:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 336              		.loc 1 282 18 is_stmt 0 view .LVU72
 337 0020 3648     		ldr	r0, .L25
 338 0022 4FF08042 		mov	r2, #1073741824
 339 0026 0260     		str	r2, [r0]
 283:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 340              		.loc 1 283 3 is_stmt 1 view .LVU73
 283:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 341              		.loc 1 283 24 is_stmt 0 view .LVU74
 342 0028 4360     		str	r3, [r0, #4]
 284:Core/Src/main.c ****   htim2.Init.Period = TIM2_Ticks - 1;
 343              		.loc 1 284 3 is_stmt 1 view .LVU75
 284:Core/Src/main.c ****   htim2.Init.Period = TIM2_Ticks - 1;
 344              		.loc 1 284 26 is_stmt 0 view .LVU76
 345 002a 8360     		str	r3, [r0, #8]
 285:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 346              		.loc 1 285 3 is_stmt 1 view .LVU77
 285:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 347              		.loc 1 285 34 is_stmt 0 view .LVU78
 348 002c 344A     		ldr	r2, .L25+4
 349 002e 1268     		ldr	r2, [r2]
 350 0030 013A     		subs	r2, r2, #1
 285:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 351              		.loc 1 285 21 view .LVU79
 352 0032 C260     		str	r2, [r0, #12]
 286:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 353              		.loc 1 286 3 is_stmt 1 view .LVU80
 286:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 354              		.loc 1 286 28 is_stmt 0 view .LVU81
 355 0034 0361     		str	r3, [r0, #16]
 287:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 356              		.loc 1 287 3 is_stmt 1 view .LVU82
 287:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 357              		.loc 1 287 32 is_stmt 0 view .LVU83
 358 0036 8361     		str	r3, [r0, #24]
 288:Core/Src/main.c ****   {
 359              		.loc 1 288 3 is_stmt 1 view .LVU84
 288:Core/Src/main.c ****   {
 360              		.loc 1 288 7 is_stmt 0 view .LVU85
 361 0038 FFF7FEFF 		bl	HAL_TIM_Base_Init
 362              	.LVL11:
 288:Core/Src/main.c ****   {
 363              		.loc 1 288 6 discriminator 1 view .LVU86
 364 003c 0028     		cmp	r0, #0
 365 003e 50D1     		bne	.L19
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 34


 292:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 366              		.loc 1 292 3 is_stmt 1 view .LVU87
 292:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 367              		.loc 1 292 34 is_stmt 0 view .LVU88
 368 0040 4FF48053 		mov	r3, #4096
 369 0044 0A93     		str	r3, [sp, #40]
 293:Core/Src/main.c ****   {
 370              		.loc 1 293 3 is_stmt 1 view .LVU89
 293:Core/Src/main.c ****   {
 371              		.loc 1 293 7 is_stmt 0 view .LVU90
 372 0046 0AA9     		add	r1, sp, #40
 373 0048 2C48     		ldr	r0, .L25
 374 004a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 375              	.LVL12:
 293:Core/Src/main.c ****   {
 376              		.loc 1 293 6 discriminator 1 view .LVU91
 377 004e 0028     		cmp	r0, #0
 378 0050 49D1     		bne	.L20
 297:Core/Src/main.c ****   {
 379              		.loc 1 297 3 is_stmt 1 view .LVU92
 297:Core/Src/main.c ****   {
 380              		.loc 1 297 7 is_stmt 0 view .LVU93
 381 0052 2A48     		ldr	r0, .L25
 382 0054 FFF7FEFF 		bl	HAL_TIM_OC_Init
 383              	.LVL13:
 297:Core/Src/main.c ****   {
 384              		.loc 1 297 6 discriminator 1 view .LVU94
 385 0058 0028     		cmp	r0, #0
 386 005a 46D1     		bne	.L21
 301:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 387              		.loc 1 301 3 is_stmt 1 view .LVU95
 301:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 388              		.loc 1 301 37 is_stmt 0 view .LVU96
 389 005c 0023     		movs	r3, #0
 390 005e 0893     		str	r3, [sp, #32]
 302:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 391              		.loc 1 302 3 is_stmt 1 view .LVU97
 302:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 392              		.loc 1 302 33 is_stmt 0 view .LVU98
 393 0060 0993     		str	r3, [sp, #36]
 303:Core/Src/main.c ****   {
 394              		.loc 1 303 3 is_stmt 1 view .LVU99
 303:Core/Src/main.c ****   {
 395              		.loc 1 303 7 is_stmt 0 view .LVU100
 396 0062 08A9     		add	r1, sp, #32
 397 0064 2548     		ldr	r0, .L25
 398 0066 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 399              	.LVL14:
 303:Core/Src/main.c ****   {
 400              		.loc 1 303 6 discriminator 1 view .LVU101
 401 006a 0028     		cmp	r0, #0
 402 006c 3FD1     		bne	.L22
 307:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 403              		.loc 1 307 3 is_stmt 1 view .LVU102
 307:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 404              		.loc 1 307 20 is_stmt 0 view .LVU103
 405 006e 0022     		movs	r2, #0
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 35


 406 0070 0192     		str	r2, [sp, #4]
 308:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 407              		.loc 1 308 3 is_stmt 1 view .LVU104
 308:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 408              		.loc 1 308 19 is_stmt 0 view .LVU105
 409 0072 0292     		str	r2, [sp, #8]
 309:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 410              		.loc 1 309 3 is_stmt 1 view .LVU106
 309:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 411              		.loc 1 309 24 is_stmt 0 view .LVU107
 412 0074 0392     		str	r2, [sp, #12]
 310:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 413              		.loc 1 310 3 is_stmt 1 view .LVU108
 310:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 414              		.loc 1 310 24 is_stmt 0 view .LVU109
 415 0076 0592     		str	r2, [sp, #20]
 311:Core/Src/main.c ****   {
 416              		.loc 1 311 3 is_stmt 1 view .LVU110
 311:Core/Src/main.c ****   {
 417              		.loc 1 311 7 is_stmt 0 view .LVU111
 418 0078 01A9     		add	r1, sp, #4
 419 007a 2048     		ldr	r0, .L25
 420 007c FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 421              	.LVL15:
 311:Core/Src/main.c ****   {
 422              		.loc 1 311 6 discriminator 1 view .LVU112
 423 0080 0028     		cmp	r0, #0
 424 0082 36D1     		bne	.L23
 317:Core/Src/main.c **** 
 425              		.loc 1 317 3 is_stmt 1 view .LVU113
 426              	.LBB10:
 317:Core/Src/main.c **** 
 427              		.loc 1 317 3 view .LVU114
 428 0084 0023     		movs	r3, #0
 429 0086 0093     		str	r3, [sp]
 317:Core/Src/main.c **** 
 430              		.loc 1 317 3 view .LVU115
 431 0088 1E4A     		ldr	r2, .L25+8
 432 008a 116B     		ldr	r1, [r2, #48]
 433 008c 41F40011 		orr	r1, r1, #2097152
 434 0090 1163     		str	r1, [r2, #48]
 317:Core/Src/main.c **** 
 435              		.loc 1 317 3 view .LVU116
 436 0092 126B     		ldr	r2, [r2, #48]
 437 0094 02F40012 		and	r2, r2, #2097152
 438 0098 0092     		str	r2, [sp]
 317:Core/Src/main.c **** 
 439              		.loc 1 317 3 view .LVU117
 440 009a 009A     		ldr	r2, [sp]
 441              	.LBE10:
 317:Core/Src/main.c **** 
 442              		.loc 1 317 3 view .LVU118
 319:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 443              		.loc 1 319 3 view .LVU119
 319:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 444              		.loc 1 319 26 is_stmt 0 view .LVU120
 445 009c 1A48     		ldr	r0, .L25+12
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 36


 446 009e 1B4A     		ldr	r2, .L25+16
 447 00a0 0260     		str	r2, [r0]
 320:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 448              		.loc 1 320 3 is_stmt 1 view .LVU121
 320:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 449              		.loc 1 320 30 is_stmt 0 view .LVU122
 450 00a2 4FF0C062 		mov	r2, #100663296
 451 00a6 4260     		str	r2, [r0, #4]
 321:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 452              		.loc 1 321 3 is_stmt 1 view .LVU123
 321:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 453              		.loc 1 321 32 is_stmt 0 view .LVU124
 454 00a8 4022     		movs	r2, #64
 455 00aa 8260     		str	r2, [r0, #8]
 322:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 456              		.loc 1 322 3 is_stmt 1 view .LVU125
 322:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 457              		.loc 1 322 32 is_stmt 0 view .LVU126
 458 00ac C360     		str	r3, [r0, #12]
 323:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 459              		.loc 1 323 3 is_stmt 1 view .LVU127
 323:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 460              		.loc 1 323 29 is_stmt 0 view .LVU128
 461 00ae 4FF48062 		mov	r2, #1024
 462 00b2 0261     		str	r2, [r0, #16]
 324:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 463              		.loc 1 324 3 is_stmt 1 view .LVU129
 324:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 464              		.loc 1 324 42 is_stmt 0 view .LVU130
 465 00b4 4FF48052 		mov	r2, #4096
 466 00b8 4261     		str	r2, [r0, #20]
 325:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 467              		.loc 1 325 3 is_stmt 1 view .LVU131
 325:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 468              		.loc 1 325 39 is_stmt 0 view .LVU132
 469 00ba 4FF48042 		mov	r2, #16384
 470 00be 8261     		str	r2, [r0, #24]
 326:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 471              		.loc 1 326 3 is_stmt 1 view .LVU133
 326:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 472              		.loc 1 326 27 is_stmt 0 view .LVU134
 473 00c0 4FF48072 		mov	r2, #256
 474 00c4 C261     		str	r2, [r0, #28]
 327:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 475              		.loc 1 327 3 is_stmt 1 view .LVU135
 327:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 476              		.loc 1 327 31 is_stmt 0 view .LVU136
 477 00c6 4FF40032 		mov	r2, #131072
 478 00ca 0262     		str	r2, [r0, #32]
 328:Core/Src/main.c **** 
 479              		.loc 1 328 3 is_stmt 1 view .LVU137
 328:Core/Src/main.c **** 
 480              		.loc 1 328 31 is_stmt 0 view .LVU138
 481 00cc 4362     		str	r3, [r0, #36]
 330:Core/Src/main.c ****   {
 482              		.loc 1 330 3 is_stmt 1 view .LVU139
 330:Core/Src/main.c ****   {
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 37


 483              		.loc 1 330 7 is_stmt 0 view .LVU140
 484 00ce FFF7FEFF 		bl	HAL_DMA_Init
 485              	.LVL16:
 330:Core/Src/main.c ****   {
 486              		.loc 1 330 6 discriminator 1 view .LVU141
 487 00d2 80B9     		cbnz	r0, .L24
 336:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 488              		.loc 1 336 3 is_stmt 1 view .LVU142
 336:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 489              		.loc 1 336 3 view .LVU143
 490 00d4 094A     		ldr	r2, .L25
 491 00d6 0C4B     		ldr	r3, .L25+12
 492 00d8 5362     		str	r3, [r2, #36]
 336:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 493              		.loc 1 336 3 view .LVU144
 494 00da 9A63     		str	r2, [r3, #56]
 336:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 495              		.loc 1 336 3 view .LVU145
 339:Core/Src/main.c **** 
 496              		.loc 1 339 1 is_stmt 0 view .LVU146
 497 00dc 0FB0     		add	sp, sp, #60
 498              	.LCFI8:
 499              		.cfi_remember_state
 500              		.cfi_def_cfa_offset 4
 501              		@ sp needed
 502 00de 5DF804FB 		ldr	pc, [sp], #4
 503              	.L19:
 504              	.LCFI9:
 505              		.cfi_restore_state
 290:Core/Src/main.c ****   }
 506              		.loc 1 290 5 is_stmt 1 view .LVU147
 507 00e2 FFF7FEFF 		bl	Error_Handler
 508              	.LVL17:
 509              	.L20:
 295:Core/Src/main.c ****   }
 510              		.loc 1 295 5 view .LVU148
 511 00e6 FFF7FEFF 		bl	Error_Handler
 512              	.LVL18:
 513              	.L21:
 299:Core/Src/main.c ****   }
 514              		.loc 1 299 5 view .LVU149
 515 00ea FFF7FEFF 		bl	Error_Handler
 516              	.LVL19:
 517              	.L22:
 305:Core/Src/main.c ****   }
 518              		.loc 1 305 5 view .LVU150
 519 00ee FFF7FEFF 		bl	Error_Handler
 520              	.LVL20:
 521              	.L23:
 313:Core/Src/main.c ****   }
 522              		.loc 1 313 5 view .LVU151
 523 00f2 FFF7FEFF 		bl	Error_Handler
 524              	.LVL21:
 525              	.L24:
 332:Core/Src/main.c ****   }
 526              		.loc 1 332 7 view .LVU152
 527 00f6 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 38


 528              	.LVL22:
 529              	.L26:
 530 00fa 00BF     		.align	2
 531              	.L25:
 532 00fc 00000000 		.word	htim2
 533 0100 00000000 		.word	TIM2_Ticks
 534 0104 00380240 		.word	1073887232
 535 0108 00000000 		.word	hdma_tim2_ch1
 536 010c 88600240 		.word	1073897608
 537              		.cfi_endproc
 538              	.LFE139:
 540              		.section	.text.MX_TIM3_Init,"ax",%progbits
 541              		.align	1
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
 546              	MX_TIM3_Init:
 547              	.LFB140:
 347:Core/Src/main.c **** 
 548              		.loc 1 347 1 view -0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 56
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552 0000 00B5     		push	{lr}
 553              	.LCFI10:
 554              		.cfi_def_cfa_offset 4
 555              		.cfi_offset 14, -4
 556 0002 8FB0     		sub	sp, sp, #60
 557              	.LCFI11:
 558              		.cfi_def_cfa_offset 64
 353:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 559              		.loc 1 353 3 view .LVU154
 353:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 560              		.loc 1 353 26 is_stmt 0 view .LVU155
 561 0004 0023     		movs	r3, #0
 562 0006 0A93     		str	r3, [sp, #40]
 563 0008 0B93     		str	r3, [sp, #44]
 564 000a 0C93     		str	r3, [sp, #48]
 565 000c 0D93     		str	r3, [sp, #52]
 354:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 566              		.loc 1 354 3 is_stmt 1 view .LVU156
 354:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 567              		.loc 1 354 27 is_stmt 0 view .LVU157
 568 000e 0893     		str	r3, [sp, #32]
 569 0010 0993     		str	r3, [sp, #36]
 355:Core/Src/main.c **** 
 570              		.loc 1 355 3 is_stmt 1 view .LVU158
 355:Core/Src/main.c **** 
 571              		.loc 1 355 22 is_stmt 0 view .LVU159
 572 0012 0193     		str	r3, [sp, #4]
 573 0014 0293     		str	r3, [sp, #8]
 574 0016 0393     		str	r3, [sp, #12]
 575 0018 0493     		str	r3, [sp, #16]
 576 001a 0593     		str	r3, [sp, #20]
 577 001c 0693     		str	r3, [sp, #24]
 578 001e 0793     		str	r3, [sp, #28]
 360:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 39


 579              		.loc 1 360 3 is_stmt 1 view .LVU160
 360:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 580              		.loc 1 360 18 is_stmt 0 view .LVU161
 581 0020 1E48     		ldr	r0, .L39
 582 0022 1F4A     		ldr	r2, .L39+4
 583 0024 0260     		str	r2, [r0]
 361:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 584              		.loc 1 361 3 is_stmt 1 view .LVU162
 361:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 585              		.loc 1 361 24 is_stmt 0 view .LVU163
 586 0026 4360     		str	r3, [r0, #4]
 362:Core/Src/main.c ****   htim3.Init.Period = 65535;
 587              		.loc 1 362 3 is_stmt 1 view .LVU164
 362:Core/Src/main.c ****   htim3.Init.Period = 65535;
 588              		.loc 1 362 26 is_stmt 0 view .LVU165
 589 0028 8360     		str	r3, [r0, #8]
 363:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 590              		.loc 1 363 3 is_stmt 1 view .LVU166
 363:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 591              		.loc 1 363 21 is_stmt 0 view .LVU167
 592 002a 4FF6FF72 		movw	r2, #65535
 593 002e C260     		str	r2, [r0, #12]
 364:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 594              		.loc 1 364 3 is_stmt 1 view .LVU168
 364:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 595              		.loc 1 364 28 is_stmt 0 view .LVU169
 596 0030 0361     		str	r3, [r0, #16]
 365:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 597              		.loc 1 365 3 is_stmt 1 view .LVU170
 365:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 598              		.loc 1 365 32 is_stmt 0 view .LVU171
 599 0032 8361     		str	r3, [r0, #24]
 366:Core/Src/main.c ****   {
 600              		.loc 1 366 3 is_stmt 1 view .LVU172
 366:Core/Src/main.c ****   {
 601              		.loc 1 366 7 is_stmt 0 view .LVU173
 602 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 603              	.LVL23:
 366:Core/Src/main.c ****   {
 604              		.loc 1 366 6 discriminator 1 view .LVU174
 605 0038 28BB     		cbnz	r0, .L34
 370:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 606              		.loc 1 370 3 is_stmt 1 view .LVU175
 370:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 607              		.loc 1 370 34 is_stmt 0 view .LVU176
 608 003a 4FF48053 		mov	r3, #4096
 609 003e 0A93     		str	r3, [sp, #40]
 371:Core/Src/main.c ****   {
 610              		.loc 1 371 3 is_stmt 1 view .LVU177
 371:Core/Src/main.c ****   {
 611              		.loc 1 371 7 is_stmt 0 view .LVU178
 612 0040 0AA9     		add	r1, sp, #40
 613 0042 1648     		ldr	r0, .L39
 614 0044 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 615              	.LVL24:
 371:Core/Src/main.c ****   {
 616              		.loc 1 371 6 discriminator 1 view .LVU179
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 40


 617 0048 F8B9     		cbnz	r0, .L35
 375:Core/Src/main.c ****   {
 618              		.loc 1 375 3 is_stmt 1 view .LVU180
 375:Core/Src/main.c ****   {
 619              		.loc 1 375 7 is_stmt 0 view .LVU181
 620 004a 1448     		ldr	r0, .L39
 621 004c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 622              	.LVL25:
 375:Core/Src/main.c ****   {
 623              		.loc 1 375 6 discriminator 1 view .LVU182
 624 0050 E8B9     		cbnz	r0, .L36
 379:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 625              		.loc 1 379 3 is_stmt 1 view .LVU183
 379:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 626              		.loc 1 379 37 is_stmt 0 view .LVU184
 627 0052 0023     		movs	r3, #0
 628 0054 0893     		str	r3, [sp, #32]
 380:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 629              		.loc 1 380 3 is_stmt 1 view .LVU185
 380:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 630              		.loc 1 380 33 is_stmt 0 view .LVU186
 631 0056 0993     		str	r3, [sp, #36]
 381:Core/Src/main.c ****   {
 632              		.loc 1 381 3 is_stmt 1 view .LVU187
 381:Core/Src/main.c ****   {
 633              		.loc 1 381 7 is_stmt 0 view .LVU188
 634 0058 08A9     		add	r1, sp, #32
 635 005a 1048     		ldr	r0, .L39
 636 005c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 637              	.LVL26:
 381:Core/Src/main.c ****   {
 638              		.loc 1 381 6 discriminator 1 view .LVU189
 639 0060 B8B9     		cbnz	r0, .L37
 385:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 640              		.loc 1 385 3 is_stmt 1 view .LVU190
 385:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 641              		.loc 1 385 20 is_stmt 0 view .LVU191
 642 0062 6023     		movs	r3, #96
 643 0064 0193     		str	r3, [sp, #4]
 386:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 644              		.loc 1 386 3 is_stmt 1 view .LVU192
 386:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 645              		.loc 1 386 19 is_stmt 0 view .LVU193
 646 0066 0023     		movs	r3, #0
 647 0068 0293     		str	r3, [sp, #8]
 387:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 648              		.loc 1 387 3 is_stmt 1 view .LVU194
 387:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 649              		.loc 1 387 24 is_stmt 0 view .LVU195
 650 006a 0393     		str	r3, [sp, #12]
 388:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 651              		.loc 1 388 3 is_stmt 1 view .LVU196
 388:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 652              		.loc 1 388 24 is_stmt 0 view .LVU197
 653 006c 0593     		str	r3, [sp, #20]
 389:Core/Src/main.c ****   {
 654              		.loc 1 389 3 is_stmt 1 view .LVU198
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 41


 389:Core/Src/main.c ****   {
 655              		.loc 1 389 7 is_stmt 0 view .LVU199
 656 006e 0822     		movs	r2, #8
 657 0070 01A9     		add	r1, sp, #4
 658 0072 0A48     		ldr	r0, .L39
 659 0074 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 660              	.LVL27:
 389:Core/Src/main.c ****   {
 661              		.loc 1 389 6 discriminator 1 view .LVU200
 662 0078 68B9     		cbnz	r0, .L38
 396:Core/Src/main.c **** 
 663              		.loc 1 396 3 is_stmt 1 view .LVU201
 664 007a 0848     		ldr	r0, .L39
 665 007c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 666              	.LVL28:
 398:Core/Src/main.c **** 
 667              		.loc 1 398 1 is_stmt 0 view .LVU202
 668 0080 0FB0     		add	sp, sp, #60
 669              	.LCFI12:
 670              		.cfi_remember_state
 671              		.cfi_def_cfa_offset 4
 672              		@ sp needed
 673 0082 5DF804FB 		ldr	pc, [sp], #4
 674              	.L34:
 675              	.LCFI13:
 676              		.cfi_restore_state
 368:Core/Src/main.c ****   }
 677              		.loc 1 368 5 is_stmt 1 view .LVU203
 678 0086 FFF7FEFF 		bl	Error_Handler
 679              	.LVL29:
 680              	.L35:
 373:Core/Src/main.c ****   }
 681              		.loc 1 373 5 view .LVU204
 682 008a FFF7FEFF 		bl	Error_Handler
 683              	.LVL30:
 684              	.L36:
 377:Core/Src/main.c ****   }
 685              		.loc 1 377 5 view .LVU205
 686 008e FFF7FEFF 		bl	Error_Handler
 687              	.LVL31:
 688              	.L37:
 383:Core/Src/main.c ****   }
 689              		.loc 1 383 5 view .LVU206
 690 0092 FFF7FEFF 		bl	Error_Handler
 691              	.LVL32:
 692              	.L38:
 391:Core/Src/main.c ****   }
 693              		.loc 1 391 5 view .LVU207
 694 0096 FFF7FEFF 		bl	Error_Handler
 695              	.LVL33:
 696              	.L40:
 697 009a 00BF     		.align	2
 698              	.L39:
 699 009c 00000000 		.word	htim3
 700 00a0 00040040 		.word	1073742848
 701              		.cfi_endproc
 702              	.LFE140:
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 42


 704              		.section	.text.SystemClock_Config,"ax",%progbits
 705              		.align	1
 706              		.global	SystemClock_Config
 707              		.syntax unified
 708              		.thumb
 709              		.thumb_func
 711              	SystemClock_Config:
 712              	.LFB138:
 227:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 713              		.loc 1 227 1 view -0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 80
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717 0000 00B5     		push	{lr}
 718              	.LCFI14:
 719              		.cfi_def_cfa_offset 4
 720              		.cfi_offset 14, -4
 721 0002 95B0     		sub	sp, sp, #84
 722              	.LCFI15:
 723              		.cfi_def_cfa_offset 88
 228:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 724              		.loc 1 228 3 view .LVU209
 228:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 725              		.loc 1 228 22 is_stmt 0 view .LVU210
 726 0004 3422     		movs	r2, #52
 727 0006 0021     		movs	r1, #0
 728 0008 07A8     		add	r0, sp, #28
 729 000a FFF7FEFF 		bl	memset
 730              	.LVL34:
 229:Core/Src/main.c **** 
 731              		.loc 1 229 3 is_stmt 1 view .LVU211
 229:Core/Src/main.c **** 
 732              		.loc 1 229 22 is_stmt 0 view .LVU212
 733 000e 0023     		movs	r3, #0
 734 0010 0293     		str	r3, [sp, #8]
 735 0012 0393     		str	r3, [sp, #12]
 736 0014 0493     		str	r3, [sp, #16]
 737 0016 0593     		str	r3, [sp, #20]
 738 0018 0693     		str	r3, [sp, #24]
 233:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 739              		.loc 1 233 3 is_stmt 1 view .LVU213
 740              	.LBB11:
 233:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 741              		.loc 1 233 3 view .LVU214
 742 001a 0093     		str	r3, [sp]
 233:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 743              		.loc 1 233 3 view .LVU215
 744 001c 194A     		ldr	r2, .L47
 745 001e 116C     		ldr	r1, [r2, #64]
 746 0020 41F08051 		orr	r1, r1, #268435456
 747 0024 1164     		str	r1, [r2, #64]
 233:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 748              		.loc 1 233 3 view .LVU216
 749 0026 126C     		ldr	r2, [r2, #64]
 750 0028 02F08052 		and	r2, r2, #268435456
 751 002c 0092     		str	r2, [sp]
 233:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 43


 752              		.loc 1 233 3 view .LVU217
 753 002e 009A     		ldr	r2, [sp]
 754              	.LBE11:
 233:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 755              		.loc 1 233 3 view .LVU218
 234:Core/Src/main.c **** 
 756              		.loc 1 234 3 view .LVU219
 757              	.LBB12:
 234:Core/Src/main.c **** 
 758              		.loc 1 234 3 view .LVU220
 759 0030 0193     		str	r3, [sp, #4]
 234:Core/Src/main.c **** 
 760              		.loc 1 234 3 view .LVU221
 761 0032 1549     		ldr	r1, .L47+4
 762 0034 0A68     		ldr	r2, [r1]
 763 0036 22F44042 		bic	r2, r2, #49152
 764 003a 42F48042 		orr	r2, r2, #16384
 765 003e 0A60     		str	r2, [r1]
 234:Core/Src/main.c **** 
 766              		.loc 1 234 3 view .LVU222
 767 0040 0A68     		ldr	r2, [r1]
 768 0042 02F44042 		and	r2, r2, #49152
 769 0046 0192     		str	r2, [sp, #4]
 234:Core/Src/main.c **** 
 770              		.loc 1 234 3 view .LVU223
 771 0048 019A     		ldr	r2, [sp, #4]
 772              	.LBE12:
 234:Core/Src/main.c **** 
 773              		.loc 1 234 3 view .LVU224
 239:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 774              		.loc 1 239 3 view .LVU225
 239:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 775              		.loc 1 239 36 is_stmt 0 view .LVU226
 776 004a 0222     		movs	r2, #2
 777 004c 0792     		str	r2, [sp, #28]
 240:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 778              		.loc 1 240 3 is_stmt 1 view .LVU227
 240:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 779              		.loc 1 240 30 is_stmt 0 view .LVU228
 780 004e 0122     		movs	r2, #1
 781 0050 0A92     		str	r2, [sp, #40]
 241:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 782              		.loc 1 241 3 is_stmt 1 view .LVU229
 241:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 783              		.loc 1 241 41 is_stmt 0 view .LVU230
 784 0052 1022     		movs	r2, #16
 785 0054 0B92     		str	r2, [sp, #44]
 242:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 786              		.loc 1 242 3 is_stmt 1 view .LVU231
 242:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 787              		.loc 1 242 34 is_stmt 0 view .LVU232
 788 0056 0D93     		str	r3, [sp, #52]
 243:Core/Src/main.c ****   {
 789              		.loc 1 243 3 is_stmt 1 view .LVU233
 243:Core/Src/main.c ****   {
 790              		.loc 1 243 7 is_stmt 0 view .LVU234
 791 0058 07A8     		add	r0, sp, #28
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 44


 792 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 793              	.LVL35:
 243:Core/Src/main.c ****   {
 794              		.loc 1 243 6 discriminator 1 view .LVU235
 795 005e 68B9     		cbnz	r0, .L45
 250:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 796              		.loc 1 250 3 is_stmt 1 view .LVU236
 250:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 797              		.loc 1 250 31 is_stmt 0 view .LVU237
 798 0060 0F23     		movs	r3, #15
 799 0062 0293     		str	r3, [sp, #8]
 252:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800              		.loc 1 252 3 is_stmt 1 view .LVU238
 252:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 801              		.loc 1 252 34 is_stmt 0 view .LVU239
 802 0064 0021     		movs	r1, #0
 803 0066 0391     		str	r1, [sp, #12]
 253:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 804              		.loc 1 253 3 is_stmt 1 view .LVU240
 253:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 805              		.loc 1 253 35 is_stmt 0 view .LVU241
 806 0068 0491     		str	r1, [sp, #16]
 254:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 807              		.loc 1 254 3 is_stmt 1 view .LVU242
 254:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 808              		.loc 1 254 36 is_stmt 0 view .LVU243
 809 006a 0591     		str	r1, [sp, #20]
 255:Core/Src/main.c **** 
 810              		.loc 1 255 3 is_stmt 1 view .LVU244
 255:Core/Src/main.c **** 
 811              		.loc 1 255 36 is_stmt 0 view .LVU245
 812 006c 0691     		str	r1, [sp, #24]
 257:Core/Src/main.c ****   {
 813              		.loc 1 257 3 is_stmt 1 view .LVU246
 257:Core/Src/main.c ****   {
 814              		.loc 1 257 7 is_stmt 0 view .LVU247
 815 006e 02A8     		add	r0, sp, #8
 816 0070 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 817              	.LVL36:
 257:Core/Src/main.c ****   {
 818              		.loc 1 257 6 discriminator 1 view .LVU248
 819 0074 20B9     		cbnz	r0, .L46
 261:Core/Src/main.c **** 
 820              		.loc 1 261 1 view .LVU249
 821 0076 15B0     		add	sp, sp, #84
 822              	.LCFI16:
 823              		.cfi_remember_state
 824              		.cfi_def_cfa_offset 4
 825              		@ sp needed
 826 0078 5DF804FB 		ldr	pc, [sp], #4
 827              	.L45:
 828              	.LCFI17:
 829              		.cfi_restore_state
 245:Core/Src/main.c ****   }
 830              		.loc 1 245 5 is_stmt 1 view .LVU250
 831 007c FFF7FEFF 		bl	Error_Handler
 832              	.LVL37:
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 45


 833              	.L46:
 259:Core/Src/main.c ****   }
 834              		.loc 1 259 5 view .LVU251
 835 0080 FFF7FEFF 		bl	Error_Handler
 836              	.LVL38:
 837              	.L48:
 838              		.align	2
 839              	.L47:
 840 0084 00380240 		.word	1073887232
 841 0088 00700040 		.word	1073770496
 842              		.cfi_endproc
 843              	.LFE138:
 845              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 846              		.align	2
 847              	.LC0:
 848 0000 53696E65 		.ascii	"Sine\000"
 848      00
 849              		.section	.text.main,"ax",%progbits
 850              		.align	1
 851              		.global	main
 852              		.syntax unified
 853              		.thumb
 854              		.thumb_func
 856              	main:
 857              	.LFB137:
 159:Core/Src/main.c **** 
 858              		.loc 1 159 1 view -0
 859              		.cfi_startproc
 860              		@ Volatile: function does not return.
 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 0, uses_anonymous_args = 0
 863 0000 08B5     		push	{r3, lr}
 864              	.LCFI18:
 865              		.cfi_def_cfa_offset 8
 866              		.cfi_offset 3, -8
 867              		.cfi_offset 14, -4
 168:Core/Src/main.c **** 
 868              		.loc 1 168 3 view .LVU253
 869 0002 FFF7FEFF 		bl	HAL_Init
 870              	.LVL39:
 175:Core/Src/main.c **** 
 871              		.loc 1 175 3 view .LVU254
 872 0006 FFF7FEFF 		bl	SystemClock_Config
 873              	.LVL40:
 182:Core/Src/main.c ****   MX_DMA_Init();
 874              		.loc 1 182 3 view .LVU255
 875 000a FFF7FEFF 		bl	MX_GPIO_Init
 876              	.LVL41:
 183:Core/Src/main.c ****   MX_TIM2_Init();
 877              		.loc 1 183 3 view .LVU256
 878 000e FFF7FEFF 		bl	MX_DMA_Init
 879              	.LVL42:
 184:Core/Src/main.c ****   MX_TIM3_Init();
 880              		.loc 1 184 3 view .LVU257
 881 0012 FFF7FEFF 		bl	MX_TIM2_Init
 882              	.LVL43:
 185:Core/Src/main.c ****   init_LCD();
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 46


 883              		.loc 1 185 3 view .LVU258
 884 0016 FFF7FEFF 		bl	MX_TIM3_Init
 885              	.LVL44:
 186:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 886              		.loc 1 186 3 view .LVU259
 887 001a FFF7FEFF 		bl	init_LCD
 888              	.LVL45:
 189:Core/Src/main.c ****   		 Error_Handler();
 889              		.loc 1 189 5 view .LVU260
 189:Core/Src/main.c ****   		 Error_Handler();
 890              		.loc 1 189 8 is_stmt 0 view .LVU261
 891 001e 0821     		movs	r1, #8
 892 0020 1348     		ldr	r0, .L55
 893 0022 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 894              	.LVL46:
 189:Core/Src/main.c ****   		 Error_Handler();
 895              		.loc 1 189 7 discriminator 1 view .LVU262
 896 0026 08B1     		cbz	r0, .L50
 190:Core/Src/main.c ****   	 }
 897              		.loc 1 190 6 is_stmt 1 view .LVU263
 898 0028 FFF7FEFF 		bl	Error_Handler
 899              	.LVL47:
 900              	.L50:
 193:Core/Src/main.c ****   		 Error_Handler();
 901              		.loc 1 193 5 view .LVU264
 193:Core/Src/main.c ****   		 Error_Handler();
 902              		.loc 1 193 8 is_stmt 0 view .LVU265
 903 002c 0021     		movs	r1, #0
 904 002e 1148     		ldr	r0, .L55+4
 905 0030 FFF7FEFF 		bl	HAL_TIM_OC_Start
 906              	.LVL48:
 193:Core/Src/main.c ****   		 Error_Handler();
 907              		.loc 1 193 7 discriminator 1 view .LVU266
 908 0034 08B1     		cbz	r0, .L51
 194:Core/Src/main.c ****   	 }
 909              		.loc 1 194 6 is_stmt 1 view .LVU267
 910 0036 FFF7FEFF 		bl	Error_Handler
 911              	.LVL49:
 912              	.L51:
 197:Core/Src/main.c ****   			 	 	 	 (uint32_t)sine_LUT,
 913              		.loc 1 197 5 view .LVU268
 199:Core/Src/main.c ****   	 {
 914              		.loc 1 199 25 is_stmt 0 view .LVU269
 915 003a 0D4B     		ldr	r3, .L55
 916 003c 1A68     		ldr	r2, [r3]
 197:Core/Src/main.c ****   			 	 	 	 (uint32_t)sine_LUT,
 917              		.loc 1 197 8 view .LVU270
 918 003e 8023     		movs	r3, #128
 919 0040 3C32     		adds	r2, r2, #60
 920 0042 0D49     		ldr	r1, .L55+8
 921 0044 0D48     		ldr	r0, .L55+12
 922 0046 FFF7FEFF 		bl	HAL_DMA_Start_IT
 923              	.LVL50:
 197:Core/Src/main.c ****   			 	 	 	 (uint32_t)sine_LUT,
 924              		.loc 1 197 7 discriminator 1 view .LVU271
 925 004a 08B1     		cbz	r0, .L52
 201:Core/Src/main.c ****   	 }
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 47


 926              		.loc 1 201 6 is_stmt 1 view .LVU272
 927 004c FFF7FEFF 		bl	Error_Handler
 928              	.LVL51:
 929              	.L52:
 204:Core/Src/main.c ****   	lcd_putstring("Sine");
 930              		.loc 1 204 4 view .LVU273
 931 0050 FFF7FEFF 		bl	init_LCD
 932              	.LVL52:
 205:Core/Src/main.c ****   // TODO: Enable DMA (start transfer from LUT to CCR)
 933              		.loc 1 205 4 view .LVU274
 934 0054 0A48     		ldr	r0, .L55+16
 935 0056 FFF7FEFF 		bl	lcd_putstring
 936              	.LVL53:
 207:Core/Src/main.c ****   /* USER CODE END 2 */
 937              		.loc 1 207 4 view .LVU275
 938 005a 064B     		ldr	r3, .L55+4
 939 005c 1A68     		ldr	r2, [r3]
 940 005e D368     		ldr	r3, [r2, #12]
 941 0060 43F40073 		orr	r3, r3, #512
 942 0064 D360     		str	r3, [r2, #12]
 943              	.L53:
 212:Core/Src/main.c ****   {
 944              		.loc 1 212 3 view .LVU276
 216:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 945              		.loc 1 216 3 discriminator 1 view .LVU277
 946 0066 4FF47A70 		mov	r0, #1000
 947 006a FFF7FEFF 		bl	HAL_Delay
 948              	.LVL54:
 212:Core/Src/main.c ****   {
 949              		.loc 1 212 9 view .LVU278
 950 006e FAE7     		b	.L53
 951              	.L56:
 952              		.align	2
 953              	.L55:
 954 0070 00000000 		.word	htim3
 955 0074 00000000 		.word	htim2
 956 0078 00000000 		.word	sine_LUT
 957 007c 00000000 		.word	hdma_tim2_ch1
 958 0080 00000000 		.word	.LC0
 959              		.cfi_endproc
 960              	.LFE137:
 962              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 963              		.align	1
 964              		.global	EXTI0_IRQHandler
 965              		.syntax unified
 966              		.thumb
 967              		.thumb_func
 969              	EXTI0_IRQHandler:
 970              	.LFB143:
 473:Core/Src/main.c **** 
 971              		.loc 1 473 28 view -0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 0
 974              		@ frame_needed = 0, uses_anonymous_args = 0
 480:Core/Src/main.c **** 	    {
 975              		.loc 1 480 3 view .LVU280
 480:Core/Src/main.c **** 	    {
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 48


 976              		.loc 1 480 6 is_stmt 0 view .LVU281
 977 0000 1F4B     		ldr	r3, .L67
 978 0002 5B69     		ldr	r3, [r3, #20]
 480:Core/Src/main.c **** 	    {
 979              		.loc 1 480 5 view .LVU282
 980 0004 13F0010F 		tst	r3, #1
 981 0008 00D1     		bne	.L64
 982 000a 7047     		bx	lr
 983              	.L64:
 473:Core/Src/main.c **** 
 984              		.loc 1 473 28 view .LVU283
 985 000c 10B5     		push	{r4, lr}
 986              	.LCFI19:
 987              		.cfi_def_cfa_offset 8
 988              		.cfi_offset 4, -8
 989              		.cfi_offset 14, -4
 990              	.LBB13:
 482:Core/Src/main.c **** 
 991              		.loc 1 482 10 is_stmt 1 view .LVU284
 992 000e 1C4B     		ldr	r3, .L67
 993 0010 0122     		movs	r2, #1
 994 0012 5A61     		str	r2, [r3, #20]
 484:Core/Src/main.c **** 	        if ((now - last_button_press) < 200) {
 995              		.loc 1 484 10 view .LVU285
 484:Core/Src/main.c **** 	        if ((now - last_button_press) < 200) {
 996              		.loc 1 484 25 is_stmt 0 view .LVU286
 997 0014 FFF7FEFF 		bl	HAL_GetTick
 998              	.LVL55:
 485:Core/Src/main.c **** 	            // Ignore if pressed again within 200 ms
 999              		.loc 1 485 10 is_stmt 1 view .LVU287
 485:Core/Src/main.c **** 	            // Ignore if pressed again within 200 ms
 1000              		.loc 1 485 19 is_stmt 0 view .LVU288
 1001 0018 1A4B     		ldr	r3, .L67+4
 1002 001a 1B68     		ldr	r3, [r3]
 1003 001c C31A     		subs	r3, r0, r3
 485:Core/Src/main.c **** 	            // Ignore if pressed again within 200 ms
 1004              		.loc 1 485 13 view .LVU289
 1005 001e C72B     		cmp	r3, #199
 1006 0020 00D8     		bhi	.L65
 1007              	.LVL56:
 1008              	.L57:
 485:Core/Src/main.c **** 	            // Ignore if pressed again within 200 ms
 1009              		.loc 1 485 13 view .LVU290
 1010              	.LBE13:
 513:Core/Src/main.c **** /* USER CODE END 4 */
 1011              		.loc 1 513 1 view .LVU291
 1012 0022 10BD     		pop	{r4, pc}
 1013              	.LVL57:
 1014              	.L65:
 1015              	.LBB14:
 489:Core/Src/main.c **** 
 1016              		.loc 1 489 10 is_stmt 1 view .LVU292
 489:Core/Src/main.c **** 
 1017              		.loc 1 489 28 is_stmt 0 view .LVU293
 1018 0024 174B     		ldr	r3, .L67+4
 1019 0026 1860     		str	r0, [r3]
 492:Core/Src/main.c **** 	        HAL_DMA_Abort_IT(htim2.hdma[1]); // channel 1 for TIM2 CC1
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 49


 1020              		.loc 1 492 10 is_stmt 1 view .LVU294
 1021 0028 174C     		ldr	r4, .L67+8
 1022 002a 2268     		ldr	r2, [r4]
 1023 002c D368     		ldr	r3, [r2, #12]
 1024 002e 23F40073 		bic	r3, r3, #512
 1025 0032 D360     		str	r3, [r2, #12]
 493:Core/Src/main.c **** 
 1026              		.loc 1 493 10 view .LVU295
 1027 0034 606A     		ldr	r0, [r4, #36]
 1028              	.LVL58:
 493:Core/Src/main.c **** 
 1029              		.loc 1 493 10 is_stmt 0 view .LVU296
 1030 0036 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1031              	.LVL59:
 496:Core/Src/main.c **** 
 1032              		.loc 1 496 10 is_stmt 1 view .LVU297
 496:Core/Src/main.c **** 
 1033              		.loc 1 496 43 is_stmt 0 view .LVU298
 1034 003a 1449     		ldr	r1, .L67+12
 1035 003c 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1036 003e 0132     		adds	r2, r2, #1
 496:Core/Src/main.c **** 
 1037              		.loc 1 496 48 view .LVU299
 1038 0040 134B     		ldr	r3, .L67+16
 1039 0042 83FB0203 		smull	r0, r3, r3, r2
 1040 0046 03EB4303 		add	r3, r3, r3, lsl #1
 1041 004a A2EB4303 		sub	r3, r2, r3, lsl #1
 496:Core/Src/main.c **** 
 1042              		.loc 1 496 25 view .LVU300
 1043 004e DBB2     		uxtb	r3, r3
 1044 0050 0B70     		strb	r3, [r1]
 499:Core/Src/main.c **** 	                                 TIM_CHANNEL_1,
 1045              		.loc 1 499 10 is_stmt 1 view .LVU301
 499:Core/Src/main.c **** 	                                 TIM_CHANNEL_1,
 1046              		.loc 1 499 14 is_stmt 0 view .LVU302
 1047 0052 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1048 0054 8023     		movs	r3, #128
 1049 0056 0F4A     		ldr	r2, .L67+20
 1050 0058 52F82120 		ldr	r2, [r2, r1, lsl #2]
 1051 005c 0021     		movs	r1, #0
 1052 005e 2046     		mov	r0, r4
 1053 0060 FFF7FEFF 		bl	HAL_TIM_OC_Start_DMA
 1054              	.LVL60:
 499:Core/Src/main.c **** 	                                 TIM_CHANNEL_1,
 1055              		.loc 1 499 13 discriminator 1 view .LVU303
 1056 0064 50B9     		cbnz	r0, .L66
 508:Core/Src/main.c **** 	        lcd_putstring((char*)waveform_names[waveform_index]);
 1057              		.loc 1 508 10 is_stmt 1 view .LVU304
 1058 0066 0120     		movs	r0, #1
 1059 0068 FFF7FEFF 		bl	lcd_command
 1060              	.LVL61:
 509:Core/Src/main.c **** 	    }
 1061              		.loc 1 509 10 view .LVU305
 1062 006c 074B     		ldr	r3, .L67+12
 1063 006e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1064 0070 094B     		ldr	r3, .L67+24
 1065 0072 53F82200 		ldr	r0, [r3, r2, lsl #2]
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 50


 1066 0076 FFF7FEFF 		bl	lcd_putstring
 1067              	.LVL62:
 1068 007a D2E7     		b	.L57
 1069              	.L66:
 504:Core/Src/main.c **** 	        }
 1070              		.loc 1 504 14 view .LVU306
 1071 007c FFF7FEFF 		bl	Error_Handler
 1072              	.LVL63:
 1073              	.L68:
 1074              		.align	2
 1075              	.L67:
 1076 0080 003C0140 		.word	1073822720
 1077 0084 00000000 		.word	last_button_press
 1078 0088 00000000 		.word	htim2
 1079 008c 00000000 		.word	waveform_index
 1080 0090 ABAAAA2A 		.word	715827883
 1081 0094 00000000 		.word	waveforms
 1082 0098 00000000 		.word	waveform_names
 1083              	.LBE14:
 1084              		.cfi_endproc
 1085              	.LFE143:
 1087              		.global	last_button_press
 1088              		.section	.bss.last_button_press,"aw",%nobits
 1089              		.align	2
 1092              	last_button_press:
 1093 0000 00000000 		.space	4
 1094              		.global	waveform_index
 1095              		.section	.bss.waveform_index,"aw",%nobits
 1098              	waveform_index:
 1099 0000 00       		.space	1
 1100              		.global	waveform_names
 1101              		.section	.rodata.str1.4,"aMS",%progbits,1
 1102              		.align	2
 1103              	.LC1:
 1104 0000 53617774 		.ascii	"Sawtooth\000"
 1104      6F6F7468 
 1104      00
 1105 0009 000000   		.align	2
 1106              	.LC2:
 1107 000c 54726961 		.ascii	"Triangle\000"
 1107      6E676C65 
 1107      00
 1108 0015 000000   		.align	2
 1109              	.LC3:
 1110 0018 5069616E 		.ascii	"Piano\000"
 1110      6F00
 1111 001e 0000     		.align	2
 1112              	.LC4:
 1113 0020 47756974 		.ascii	"Guitar\000"
 1113      617200
 1114 0027 00       		.align	2
 1115              	.LC5:
 1116 0028 4472756D 		.ascii	"Drum\000"
 1116      00
 1117              		.section	.data.waveform_names,"aw"
 1118              		.align	2
 1121              	waveform_names:
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 51


 1122 0000 00000000 		.word	.LC0
 1123 0004 00000000 		.word	.LC1
 1124 0008 0C000000 		.word	.LC2
 1125 000c 18000000 		.word	.LC3
 1126 0010 20000000 		.word	.LC4
 1127 0014 28000000 		.word	.LC5
 1128              		.global	waveforms
 1129              		.section	.data.waveforms,"aw"
 1130              		.align	2
 1133              	waveforms:
 1134 0000 00000000 		.word	sine_LUT
 1135 0004 00000000 		.word	saw_LUT
 1136 0008 00000000 		.word	triangle_LUT
 1137 000c 00000000 		.word	piano_LUT
 1138 0010 00000000 		.word	guitar_LUT
 1139 0014 00000000 		.word	drum_LUT
 1140              		.global	DestAddress
 1141              		.section	.data.DestAddress,"aw"
 1142              		.align	2
 1145              	DestAddress:
 1146 0000 3C040040 		.word	1073742908
 1147              		.global	TIM2_Ticks
 1148              		.section	.data.TIM2_Ticks,"aw"
 1149              		.align	2
 1152              	TIM2_Ticks:
 1153 0000 7D000000 		.word	125
 1154              		.global	drum_LUT
 1155              		.section	.data.drum_LUT,"aw"
 1156              		.align	2
 1159              	drum_LUT:
 1160 0000 FF070000 		.word	2047
 1161 0004 440D0000 		.word	3396
 1162 0008 48070000 		.word	1864
 1163 000c 3E080000 		.word	2110
 1164 0010 0F080000 		.word	2063
 1165 0014 480D0000 		.word	3400
 1166 0018 65070000 		.word	1893
 1167 001c 8D070000 		.word	1933
 1168 0020 26080000 		.word	2086
 1169 0024 60080000 		.word	2144
 1170 0028 F4070000 		.word	2036
 1171 002c EE070000 		.word	2030
 1172 0030 F7070000 		.word	2039
 1173 0034 9D070000 		.word	1949
 1174 0038 86050000 		.word	1414
 1175 003c 38070000 		.word	1848
 1176 0040 2B080000 		.word	2091
 1177 0044 F0070000 		.word	2032
 1178 0048 FC070000 		.word	2044
 1179 004c 0B080000 		.word	2059
 1180 0050 00080000 		.word	2048
 1181 0054 2D080000 		.word	2093
 1182 0058 FC070000 		.word	2044
 1183 005c E4070000 		.word	2020
 1184 0060 2E080000 		.word	2094
 1185 0064 0B070000 		.word	1803
 1186 0068 18080000 		.word	2072
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 52


 1187 006c FD070000 		.word	2045
 1188 0070 7D080000 		.word	2173
 1189 0074 E1070000 		.word	2017
 1190 0078 A30C0000 		.word	3235
 1191 007c FC040000 		.word	1276
 1192 0080 87060000 		.word	1671
 1193 0084 91080000 		.word	2193
 1194 0088 84090000 		.word	2436
 1195 008c 38080000 		.word	2104
 1196 0090 8B070000 		.word	1931
 1197 0094 0E080000 		.word	2062
 1198 0098 EC070000 		.word	2028
 1199 009c F0070000 		.word	2032
 1200 00a0 FF0F0000 		.word	4095
 1201 00a4 82070000 		.word	1922
 1202 00a8 F3070000 		.word	2035
 1203 00ac FA070000 		.word	2042
 1204 00b0 C6090000 		.word	2502
 1205 00b4 44090000 		.word	2372
 1206 00b8 1C070000 		.word	1820
 1207 00bc CC070000 		.word	1996
 1208 00c0 EC080000 		.word	2284
 1209 00c4 18080000 		.word	2072
 1210 00c8 E2070000 		.word	2018
 1211 00cc 03080000 		.word	2051
 1212 00d0 9F020000 		.word	671
 1213 00d4 79090000 		.word	2425
 1214 00d8 1B080000 		.word	2075
 1215 00dc 14080000 		.word	2068
 1216 00e0 11000000 		.word	17
 1217 00e4 BF080000 		.word	2239
 1218 00e8 FA070000 		.word	2042
 1219 00ec E7070000 		.word	2023
 1220 00f0 90080000 		.word	2192
 1221 00f4 04080000 		.word	2052
 1222 00f8 560B0000 		.word	2902
 1223 00fc 52090000 		.word	2386
 1224 0100 E90F0000 		.word	4073
 1225 0104 D9070000 		.word	2009
 1226 0108 ED080000 		.word	2285
 1227 010c F6070000 		.word	2038
 1228 0110 D6090000 		.word	2518
 1229 0114 970A0000 		.word	2711
 1230 0118 00080000 		.word	2048
 1231 011c 30080000 		.word	2096
 1232 0120 5D060000 		.word	1629
 1233 0124 D1070000 		.word	2001
 1234 0128 26080000 		.word	2086
 1235 012c FB070000 		.word	2043
 1236 0130 F5090000 		.word	2549
 1237 0134 66070000 		.word	1894
 1238 0138 0D080000 		.word	2061
 1239 013c 1C080000 		.word	2076
 1240 0140 D1070000 		.word	2001
 1241 0144 07080000 		.word	2055
 1242 0148 FB070000 		.word	2043
 1243 014c 01080000 		.word	2049
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 53


 1244 0150 32080000 		.word	2098
 1245 0154 FF070000 		.word	2047
 1246 0158 11080000 		.word	2065
 1247 015c FF070000 		.word	2047
 1248 0160 6B0B0000 		.word	2923
 1249 0164 17080000 		.word	2071
 1250 0168 E1070000 		.word	2017
 1251 016c 20080000 		.word	2080
 1252 0170 E2070000 		.word	2018
 1253 0174 01080000 		.word	2049
 1254 0178 27070000 		.word	1831
 1255 017c DE070000 		.word	2014
 1256 0180 45030000 		.word	837
 1257 0184 F7080000 		.word	2295
 1258 0188 BA070000 		.word	1978
 1259 018c F8070000 		.word	2040
 1260 0190 BC070000 		.word	1980
 1261 0194 F4070000 		.word	2036
 1262 0198 3A080000 		.word	2106
 1263 019c FA070000 		.word	2042
 1264 01a0 6B060000 		.word	1643
 1265 01a4 07080000 		.word	2055
 1266 01a8 12080000 		.word	2066
 1267 01ac F0070000 		.word	2032
 1268 01b0 02080000 		.word	2050
 1269 01b4 8A090000 		.word	2442
 1270 01b8 61080000 		.word	2145
 1271 01bc AA080000 		.word	2218
 1272 01c0 4E080000 		.word	2126
 1273 01c4 F0070000 		.word	2032
 1274 01c8 F6070000 		.word	2038
 1275 01cc F5060000 		.word	1781
 1276 01d0 6A080000 		.word	2154
 1277 01d4 89090000 		.word	2441
 1278 01d8 54080000 		.word	2132
 1279 01dc FF0F0000 		.word	4095
 1280 01e0 66080000 		.word	2150
 1281 01e4 DC070000 		.word	2012
 1282 01e8 F4070000 		.word	2036
 1283 01ec 4F060000 		.word	1615
 1284 01f0 BD070000 		.word	1981
 1285 01f4 43010000 		.word	323
 1286 01f8 DD090000 		.word	2525
 1287 01fc FF070000 		.word	2047
 1288              		.global	guitar_LUT
 1289              		.section	.data.guitar_LUT,"aw"
 1290              		.align	2
 1293              	guitar_LUT:
 1294 0000 FF070000 		.word	2047
 1295 0004 3A090000 		.word	2362
 1296 0008 38090000 		.word	2360
 1297 000c 4B080000 		.word	2123
 1298 0010 31080000 		.word	2097
 1299 0014 45070000 		.word	1861
 1300 0018 29070000 		.word	1833
 1301 001c DF070000 		.word	2015
 1302 0020 FE050000 		.word	1534
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 54


 1303 0024 2C080000 		.word	2092
 1304 0028 20080000 		.word	2080
 1305 002c 04080000 		.word	2052
 1306 0030 27080000 		.word	2087
 1307 0034 1B080000 		.word	2075
 1308 0038 65070000 		.word	1893
 1309 003c F4070000 		.word	2036
 1310 0040 FB070000 		.word	2043
 1311 0044 EB070000 		.word	2027
 1312 0048 A9060000 		.word	1705
 1313 004c C5090000 		.word	2501
 1314 0050 7C070000 		.word	1916
 1315 0054 68070000 		.word	1896
 1316 0058 A2090000 		.word	2466
 1317 005c B7080000 		.word	2231
 1318 0060 EF060000 		.word	1775
 1319 0064 04080000 		.word	2052
 1320 0068 DF070000 		.word	2015
 1321 006c 0E080000 		.word	2062
 1322 0070 F4070000 		.word	2036
 1323 0074 CA070000 		.word	1994
 1324 0078 AC070000 		.word	1964
 1325 007c 06080000 		.word	2054
 1326 0080 04080000 		.word	2052
 1327 0084 32080000 		.word	2098
 1328 0088 40070000 		.word	1856
 1329 008c 65080000 		.word	2149
 1330 0090 42070000 		.word	1858
 1331 0094 4F080000 		.word	2127
 1332 0098 D3070000 		.word	2003
 1333 009c D6060000 		.word	1750
 1334 00a0 C9080000 		.word	2249
 1335 00a4 E8070000 		.word	2024
 1336 00a8 08080000 		.word	2056
 1337 00ac 04080000 		.word	2052
 1338 00b0 10080000 		.word	2064
 1339 00b4 8D070000 		.word	1933
 1340 00b8 60080000 		.word	2144
 1341 00bc F9070000 		.word	2041
 1342 00c0 54070000 		.word	1876
 1343 00c4 D6070000 		.word	2006
 1344 00c8 87080000 		.word	2183
 1345 00cc D9070000 		.word	2009
 1346 00d0 8F080000 		.word	2191
 1347 00d4 5F080000 		.word	2143
 1348 00d8 63070000 		.word	1891
 1349 00dc D5070000 		.word	2005
 1350 00e0 62080000 		.word	2146
 1351 00e4 5B080000 		.word	2139
 1352 00e8 2F080000 		.word	2095
 1353 00ec 23070000 		.word	1827
 1354 00f0 73080000 		.word	2163
 1355 00f4 31080000 		.word	2097
 1356 00f8 C90A0000 		.word	2761
 1357 00fc B6080000 		.word	2230
 1358 0100 3A080000 		.word	2106
 1359 0104 B6080000 		.word	2230
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 55


 1360 0108 DD080000 		.word	2269
 1361 010c C7080000 		.word	2247
 1362 0110 5A080000 		.word	2138
 1363 0114 47080000 		.word	2119
 1364 0118 37060000 		.word	1591
 1365 011c 96060000 		.word	1686
 1366 0120 11080000 		.word	2065
 1367 0124 F8070000 		.word	2040
 1368 0128 1F080000 		.word	2079
 1369 012c 0F080000 		.word	2063
 1370 0130 DC080000 		.word	2268
 1371 0134 FC070000 		.word	2044
 1372 0138 F0070000 		.word	2032
 1373 013c 08080000 		.word	2056
 1374 0140 75080000 		.word	2165
 1375 0144 84080000 		.word	2180
 1376 0148 09070000 		.word	1801
 1377 014c 51080000 		.word	2129
 1378 0150 1F080000 		.word	2079
 1379 0154 C9060000 		.word	1737
 1380 0158 4E080000 		.word	2126
 1381 015c 59070000 		.word	1881
 1382 0160 27080000 		.word	2087
 1383 0164 35080000 		.word	2101
 1384 0168 FE070000 		.word	2046
 1385 016c F1070000 		.word	2033
 1386 0170 A7070000 		.word	1959
 1387 0174 61070000 		.word	1889
 1388 0178 43080000 		.word	2115
 1389 017c FD070000 		.word	2045
 1390 0180 F1080000 		.word	2289
 1391 0184 B3070000 		.word	1971
 1392 0188 C4080000 		.word	2244
 1393 018c C0070000 		.word	1984
 1394 0190 EE070000 		.word	2030
 1395 0194 D5070000 		.word	2005
 1396 0198 D8090000 		.word	2520
 1397 019c 78090000 		.word	2424
 1398 01a0 DB070000 		.word	2011
 1399 01a4 04080000 		.word	2052
 1400 01a8 F2070000 		.word	2034
 1401 01ac F9070000 		.word	2041
 1402 01b0 45080000 		.word	2117
 1403 01b4 90070000 		.word	1936
 1404 01b8 FD070000 		.word	2045
 1405 01bc 03080000 		.word	2051
 1406 01c0 8C070000 		.word	1932
 1407 01c4 EB070000 		.word	2027
 1408 01c8 6D080000 		.word	2157
 1409 01cc 67070000 		.word	1895
 1410 01d0 FA080000 		.word	2298
 1411 01d4 98070000 		.word	1944
 1412 01d8 A5080000 		.word	2213
 1413 01dc 76060000 		.word	1654
 1414 01e0 39080000 		.word	2105
 1415 01e4 3E070000 		.word	1854
 1416 01e8 52090000 		.word	2386
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 56


 1417 01ec 71070000 		.word	1905
 1418 01f0 68060000 		.word	1640
 1419 01f4 3A0A0000 		.word	2618
 1420 01f8 8D070000 		.word	1933
 1421 01fc 00080000 		.word	2048
 1422              		.global	piano_LUT
 1423              		.section	.data.piano_LUT,"aw"
 1424              		.align	2
 1427              	piano_LUT:
 1428 0000 FF070000 		.word	2047
 1429 0004 87080000 		.word	2183
 1430 0008 C0070000 		.word	1984
 1431 000c 32080000 		.word	2098
 1432 0010 0D080000 		.word	2061
 1433 0014 28080000 		.word	2088
 1434 0018 F6070000 		.word	2038
 1435 001c 6E080000 		.word	2158
 1436 0020 31080000 		.word	2097
 1437 0024 69080000 		.word	2153
 1438 0028 24080000 		.word	2084
 1439 002c 06080000 		.word	2054
 1440 0030 E0070000 		.word	2016
 1441 0034 1D090000 		.word	2333
 1442 0038 0B080000 		.word	2059
 1443 003c E5060000 		.word	1765
 1444 0040 EB070000 		.word	2027
 1445 0044 FD070000 		.word	2045
 1446 0048 B2070000 		.word	1970
 1447 004c 07080000 		.word	2055
 1448 0050 0F080000 		.word	2063
 1449 0054 03080000 		.word	2051
 1450 0058 2F060000 		.word	1583
 1451 005c E6070000 		.word	2022
 1452 0060 1E090000 		.word	2334
 1453 0064 FC070000 		.word	2044
 1454 0068 440B0000 		.word	2884
 1455 006c 9C060000 		.word	1692
 1456 0070 DF060000 		.word	1759
 1457 0074 33070000 		.word	1843
 1458 0078 C2080000 		.word	2242
 1459 007c 93080000 		.word	2195
 1460 0080 FB050000 		.word	1531
 1461 0084 73080000 		.word	2163
 1462 0088 B1070000 		.word	1969
 1463 008c 0D080000 		.word	2061
 1464 0090 C3070000 		.word	1987
 1465 0094 28080000 		.word	2088
 1466 0098 C5060000 		.word	1733
 1467 009c A0070000 		.word	1952
 1468 00a0 8E070000 		.word	1934
 1469 00a4 35080000 		.word	2101
 1470 00a8 CC080000 		.word	2252
 1471 00ac 84070000 		.word	1924
 1472 00b0 CD080000 		.word	2253
 1473 00b4 89070000 		.word	1929
 1474 00b8 380A0000 		.word	2616
 1475 00bc EE070000 		.word	2030
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 57


 1476 00c0 31080000 		.word	2097
 1477 00c4 0F080000 		.word	2063
 1478 00c8 C1070000 		.word	1985
 1479 00cc 0F080000 		.word	2063
 1480 00d0 E8070000 		.word	2024
 1481 00d4 F5070000 		.word	2037
 1482 00d8 020B0000 		.word	2818
 1483 00dc 98070000 		.word	1944
 1484 00e0 59090000 		.word	2393
 1485 00e4 4B070000 		.word	1867
 1486 00e8 D0070000 		.word	2000
 1487 00ec 9D070000 		.word	1949
 1488 00f0 C0050000 		.word	1472
 1489 00f4 77070000 		.word	1911
 1490 00f8 9B060000 		.word	1691
 1491 00fc F3070000 		.word	2035
 1492 0100 F2060000 		.word	1778
 1493 0104 16080000 		.word	2070
 1494 0108 5F080000 		.word	2143
 1495 010c FF070000 		.word	2047
 1496 0110 DF070000 		.word	2015
 1497 0114 E5070000 		.word	2021
 1498 0118 B6060000 		.word	1718
 1499 011c 69080000 		.word	2153
 1500 0120 6E070000 		.word	1902
 1501 0124 26080000 		.word	2086
 1502 0128 02070000 		.word	1794
 1503 012c 98090000 		.word	2456
 1504 0130 99080000 		.word	2201
 1505 0134 F0070000 		.word	2032
 1506 0138 38090000 		.word	2360
 1507 013c 7F080000 		.word	2175
 1508 0140 EB070000 		.word	2027
 1509 0144 FB070000 		.word	2043
 1510 0148 D4070000 		.word	2004
 1511 014c 18080000 		.word	2072
 1512 0150 F2070000 		.word	2034
 1513 0154 F9070000 		.word	2041
 1514 0158 8B080000 		.word	2187
 1515 015c 05080000 		.word	2053
 1516 0160 29080000 		.word	2089
 1517 0164 88070000 		.word	1928
 1518 0168 33070000 		.word	1843
 1519 016c F2070000 		.word	2034
 1520 0170 DB070000 		.word	2011
 1521 0174 B2080000 		.word	2226
 1522 0178 D9070000 		.word	2009
 1523 017c 3B080000 		.word	2107
 1524 0180 2B090000 		.word	2347
 1525 0184 04080000 		.word	2052
 1526 0188 1D080000 		.word	2077
 1527 018c F6070000 		.word	2038
 1528 0190 17080000 		.word	2071
 1529 0194 E7070000 		.word	2023
 1530 0198 DA060000 		.word	1754
 1531 019c 82070000 		.word	1922
 1532 01a0 C8070000 		.word	1992
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 58


 1533 01a4 CC070000 		.word	1996
 1534 01a8 72080000 		.word	2162
 1535 01ac 24080000 		.word	2084
 1536 01b0 F4070000 		.word	2036
 1537 01b4 CF070000 		.word	1999
 1538 01b8 2D070000 		.word	1837
 1539 01bc 66080000 		.word	2150
 1540 01c0 D5070000 		.word	2005
 1541 01c4 1F080000 		.word	2079
 1542 01c8 CD070000 		.word	1997
 1543 01cc 18080000 		.word	2072
 1544 01d0 EF070000 		.word	2031
 1545 01d4 0C080000 		.word	2060
 1546 01d8 96070000 		.word	1942
 1547 01dc 77070000 		.word	1911
 1548 01e0 44060000 		.word	1604
 1549 01e4 F4060000 		.word	1780
 1550 01e8 1D080000 		.word	2077
 1551 01ec 08080000 		.word	2056
 1552 01f0 D1070000 		.word	2001
 1553 01f4 92070000 		.word	1938
 1554 01f8 2E080000 		.word	2094
 1555 01fc FF070000 		.word	2047
 1556              		.global	triangle_LUT
 1557              		.section	.data.triangle_LUT,"aw"
 1558              		.align	2
 1561              	triangle_LUT:
 1562 0000 00000000 		.word	0
 1563 0004 7F000000 		.word	127
 1564 0008 FF000000 		.word	255
 1565 000c 7F010000 		.word	383
 1566 0010 FF010000 		.word	511
 1567 0014 7F020000 		.word	639
 1568 0018 FF020000 		.word	767
 1569 001c 7F030000 		.word	895
 1570 0020 FF030000 		.word	1023
 1571 0024 7F040000 		.word	1151
 1572 0028 FF040000 		.word	1279
 1573 002c 7F050000 		.word	1407
 1574 0030 FF050000 		.word	1535
 1575 0034 7F060000 		.word	1663
 1576 0038 FF060000 		.word	1791
 1577 003c 7F070000 		.word	1919
 1578 0040 FF070000 		.word	2047
 1579 0044 7F080000 		.word	2175
 1580 0048 FF080000 		.word	2303
 1581 004c 7F090000 		.word	2431
 1582 0050 FF090000 		.word	2559
 1583 0054 7F0A0000 		.word	2687
 1584 0058 FF0A0000 		.word	2815
 1585 005c 7F0B0000 		.word	2943
 1586 0060 FF0B0000 		.word	3071
 1587 0064 7F0C0000 		.word	3199
 1588 0068 FF0C0000 		.word	3327
 1589 006c 7F0D0000 		.word	3455
 1590 0070 FF0D0000 		.word	3583
 1591 0074 7F0E0000 		.word	3711
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 59


 1592 0078 FF0E0000 		.word	3839
 1593 007c 7F0F0000 		.word	3967
 1594 0080 FF0F0000 		.word	4095
 1595 0084 7E100000 		.word	4222
 1596 0088 FE100000 		.word	4350
 1597 008c 7E110000 		.word	4478
 1598 0090 FE110000 		.word	4606
 1599 0094 7E120000 		.word	4734
 1600 0098 FE120000 		.word	4862
 1601 009c 7E130000 		.word	4990
 1602 00a0 FE130000 		.word	5118
 1603 00a4 7E140000 		.word	5246
 1604 00a8 FE140000 		.word	5374
 1605 00ac 7E150000 		.word	5502
 1606 00b0 FE150000 		.word	5630
 1607 00b4 7E160000 		.word	5758
 1608 00b8 FE160000 		.word	5886
 1609 00bc 7E170000 		.word	6014
 1610 00c0 FE170000 		.word	6142
 1611 00c4 7E180000 		.word	6270
 1612 00c8 FE180000 		.word	6398
 1613 00cc 7E190000 		.word	6526
 1614 00d0 FE190000 		.word	6654
 1615 00d4 7E1A0000 		.word	6782
 1616 00d8 FE1A0000 		.word	6910
 1617 00dc 7E1B0000 		.word	7038
 1618 00e0 FE1B0000 		.word	7166
 1619 00e4 7E1C0000 		.word	7294
 1620 00e8 FE1C0000 		.word	7422
 1621 00ec 7E1D0000 		.word	7550
 1622 00f0 FE1D0000 		.word	7678
 1623 00f4 7E1E0000 		.word	7806
 1624 00f8 FE1E0000 		.word	7934
 1625 00fc 7E1F0000 		.word	8062
 1626 0100 FE1F0000 		.word	8190
 1627 0104 7E1F0000 		.word	8062
 1628 0108 FE1E0000 		.word	7934
 1629 010c 7E1E0000 		.word	7806
 1630 0110 FE1D0000 		.word	7678
 1631 0114 7E1D0000 		.word	7550
 1632 0118 FE1C0000 		.word	7422
 1633 011c 7E1C0000 		.word	7294
 1634 0120 FE1B0000 		.word	7166
 1635 0124 7E1B0000 		.word	7038
 1636 0128 FE1A0000 		.word	6910
 1637 012c 7E1A0000 		.word	6782
 1638 0130 FE190000 		.word	6654
 1639 0134 7E190000 		.word	6526
 1640 0138 FE180000 		.word	6398
 1641 013c 7E180000 		.word	6270
 1642 0140 FE170000 		.word	6142
 1643 0144 7E170000 		.word	6014
 1644 0148 FE160000 		.word	5886
 1645 014c 7E160000 		.word	5758
 1646 0150 FE150000 		.word	5630
 1647 0154 7E150000 		.word	5502
 1648 0158 FE140000 		.word	5374
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 60


 1649 015c 7E140000 		.word	5246
 1650 0160 FE130000 		.word	5118
 1651 0164 7E130000 		.word	4990
 1652 0168 FE120000 		.word	4862
 1653 016c 7E120000 		.word	4734
 1654 0170 FE110000 		.word	4606
 1655 0174 7E110000 		.word	4478
 1656 0178 FE100000 		.word	4350
 1657 017c 7E100000 		.word	4222
 1658 0180 FF0F0000 		.word	4095
 1659 0184 7F0F0000 		.word	3967
 1660 0188 FF0E0000 		.word	3839
 1661 018c 7F0E0000 		.word	3711
 1662 0190 FF0D0000 		.word	3583
 1663 0194 7F0D0000 		.word	3455
 1664 0198 FF0C0000 		.word	3327
 1665 019c 7F0C0000 		.word	3199
 1666 01a0 FF0B0000 		.word	3071
 1667 01a4 7F0B0000 		.word	2943
 1668 01a8 FF0A0000 		.word	2815
 1669 01ac 7F0A0000 		.word	2687
 1670 01b0 FF090000 		.word	2559
 1671 01b4 7F090000 		.word	2431
 1672 01b8 FF080000 		.word	2303
 1673 01bc 7F080000 		.word	2175
 1674 01c0 FF070000 		.word	2047
 1675 01c4 7F070000 		.word	1919
 1676 01c8 FF060000 		.word	1791
 1677 01cc 7F060000 		.word	1663
 1678 01d0 FF050000 		.word	1535
 1679 01d4 7F050000 		.word	1407
 1680 01d8 FF040000 		.word	1279
 1681 01dc 7F040000 		.word	1151
 1682 01e0 FF030000 		.word	1023
 1683 01e4 7F030000 		.word	895
 1684 01e8 FF020000 		.word	767
 1685 01ec 7F020000 		.word	639
 1686 01f0 FF010000 		.word	511
 1687 01f4 7F010000 		.word	383
 1688 01f8 FF000000 		.word	255
 1689 01fc 7F000000 		.word	127
 1690              		.global	saw_LUT
 1691              		.section	.data.saw_LUT,"aw"
 1692              		.align	2
 1695              	saw_LUT:
 1696 0000 00000000 		.word	0
 1697 0004 20000000 		.word	32
 1698 0008 40000000 		.word	64
 1699 000c 60000000 		.word	96
 1700 0010 80000000 		.word	128
 1701 0014 A1000000 		.word	161
 1702 0018 C1000000 		.word	193
 1703 001c E1000000 		.word	225
 1704 0020 01010000 		.word	257
 1705 0024 22010000 		.word	290
 1706 0028 42010000 		.word	322
 1707 002c 62010000 		.word	354
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 61


 1708 0030 82010000 		.word	386
 1709 0034 A3010000 		.word	419
 1710 0038 C3010000 		.word	451
 1711 003c E3010000 		.word	483
 1712 0040 03020000 		.word	515
 1713 0044 24020000 		.word	548
 1714 0048 44020000 		.word	580
 1715 004c 64020000 		.word	612
 1716 0050 84020000 		.word	644
 1717 0054 A5020000 		.word	677
 1718 0058 C5020000 		.word	709
 1719 005c E5020000 		.word	741
 1720 0060 05030000 		.word	773
 1721 0064 26030000 		.word	806
 1722 0068 46030000 		.word	838
 1723 006c 66030000 		.word	870
 1724 0070 86030000 		.word	902
 1725 0074 A7030000 		.word	935
 1726 0078 C7030000 		.word	967
 1727 007c E7030000 		.word	999
 1728 0080 07040000 		.word	1031
 1729 0084 28040000 		.word	1064
 1730 0088 48040000 		.word	1096
 1731 008c 68040000 		.word	1128
 1732 0090 88040000 		.word	1160
 1733 0094 A9040000 		.word	1193
 1734 0098 C9040000 		.word	1225
 1735 009c E9040000 		.word	1257
 1736 00a0 09050000 		.word	1289
 1737 00a4 2A050000 		.word	1322
 1738 00a8 4A050000 		.word	1354
 1739 00ac 6A050000 		.word	1386
 1740 00b0 8A050000 		.word	1418
 1741 00b4 AA050000 		.word	1450
 1742 00b8 CB050000 		.word	1483
 1743 00bc EB050000 		.word	1515
 1744 00c0 0B060000 		.word	1547
 1745 00c4 2B060000 		.word	1579
 1746 00c8 4C060000 		.word	1612
 1747 00cc 6C060000 		.word	1644
 1748 00d0 8C060000 		.word	1676
 1749 00d4 AC060000 		.word	1708
 1750 00d8 CD060000 		.word	1741
 1751 00dc ED060000 		.word	1773
 1752 00e0 0D070000 		.word	1805
 1753 00e4 2D070000 		.word	1837
 1754 00e8 4E070000 		.word	1870
 1755 00ec 6E070000 		.word	1902
 1756 00f0 8E070000 		.word	1934
 1757 00f4 AE070000 		.word	1966
 1758 00f8 CF070000 		.word	1999
 1759 00fc EF070000 		.word	2031
 1760 0100 0F080000 		.word	2063
 1761 0104 2F080000 		.word	2095
 1762 0108 50080000 		.word	2128
 1763 010c 70080000 		.word	2160
 1764 0110 90080000 		.word	2192
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 62


 1765 0114 B0080000 		.word	2224
 1766 0118 D1080000 		.word	2257
 1767 011c F1080000 		.word	2289
 1768 0120 11090000 		.word	2321
 1769 0124 31090000 		.word	2353
 1770 0128 52090000 		.word	2386
 1771 012c 72090000 		.word	2418
 1772 0130 92090000 		.word	2450
 1773 0134 B2090000 		.word	2482
 1774 0138 D3090000 		.word	2515
 1775 013c F3090000 		.word	2547
 1776 0140 130A0000 		.word	2579
 1777 0144 330A0000 		.word	2611
 1778 0148 540A0000 		.word	2644
 1779 014c 740A0000 		.word	2676
 1780 0150 940A0000 		.word	2708
 1781 0154 B40A0000 		.word	2740
 1782 0158 D40A0000 		.word	2772
 1783 015c F50A0000 		.word	2805
 1784 0160 150B0000 		.word	2837
 1785 0164 350B0000 		.word	2869
 1786 0168 550B0000 		.word	2901
 1787 016c 760B0000 		.word	2934
 1788 0170 960B0000 		.word	2966
 1789 0174 B60B0000 		.word	2998
 1790 0178 D60B0000 		.word	3030
 1791 017c F70B0000 		.word	3063
 1792 0180 170C0000 		.word	3095
 1793 0184 370C0000 		.word	3127
 1794 0188 570C0000 		.word	3159
 1795 018c 780C0000 		.word	3192
 1796 0190 980C0000 		.word	3224
 1797 0194 B80C0000 		.word	3256
 1798 0198 D80C0000 		.word	3288
 1799 019c F90C0000 		.word	3321
 1800 01a0 190D0000 		.word	3353
 1801 01a4 390D0000 		.word	3385
 1802 01a8 590D0000 		.word	3417
 1803 01ac 7A0D0000 		.word	3450
 1804 01b0 9A0D0000 		.word	3482
 1805 01b4 BA0D0000 		.word	3514
 1806 01b8 DA0D0000 		.word	3546
 1807 01bc FB0D0000 		.word	3579
 1808 01c0 1B0E0000 		.word	3611
 1809 01c4 3B0E0000 		.word	3643
 1810 01c8 5B0E0000 		.word	3675
 1811 01cc 7C0E0000 		.word	3708
 1812 01d0 9C0E0000 		.word	3740
 1813 01d4 BC0E0000 		.word	3772
 1814 01d8 DC0E0000 		.word	3804
 1815 01dc FD0E0000 		.word	3837
 1816 01e0 1D0F0000 		.word	3869
 1817 01e4 3D0F0000 		.word	3901
 1818 01e8 5D0F0000 		.word	3933
 1819 01ec 7E0F0000 		.word	3966
 1820 01f0 9E0F0000 		.word	3998
 1821 01f4 BE0F0000 		.word	4030
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 63


 1822 01f8 DE0F0000 		.word	4062
 1823 01fc FF0F0000 		.word	4095
 1824              		.global	sine_LUT
 1825              		.section	.data.sine_LUT,"aw"
 1826              		.align	2
 1829              	sine_LUT:
 1830 0000 FF070000 		.word	2047
 1831 0004 63080000 		.word	2147
 1832 0008 C8080000 		.word	2248
 1833 000c 2B090000 		.word	2347
 1834 0010 8E090000 		.word	2446
 1835 0014 F1090000 		.word	2545
 1836 0018 510A0000 		.word	2641
 1837 001c B10A0000 		.word	2737
 1838 0020 0F0B0000 		.word	2831
 1839 0024 6A0B0000 		.word	2922
 1840 0028 C40B0000 		.word	3012
 1841 002c 1C0C0000 		.word	3100
 1842 0030 710C0000 		.word	3185
 1843 0034 C30C0000 		.word	3267
 1844 0038 120D0000 		.word	3346
 1845 003c 5E0D0000 		.word	3422
 1846 0040 A70D0000 		.word	3495
 1847 0044 EC0D0000 		.word	3564
 1848 0048 2E0E0000 		.word	3630
 1849 004c 6C0E0000 		.word	3692
 1850 0050 A50E0000 		.word	3749
 1851 0054 DB0E0000 		.word	3803
 1852 0058 0D0F0000 		.word	3853
 1853 005c 3A0F0000 		.word	3898
 1854 0060 630F0000 		.word	3939
 1855 0064 870F0000 		.word	3975
 1856 0068 A60F0000 		.word	4006
 1857 006c C10F0000 		.word	4033
 1858 0070 D70F0000 		.word	4055
 1859 0074 E80F0000 		.word	4072
 1860 0078 F50F0000 		.word	4085
 1861 007c FC0F0000 		.word	4092
 1862 0080 FF0F0000 		.word	4095
 1863 0084 FC0F0000 		.word	4092
 1864 0088 F50F0000 		.word	4085
 1865 008c E80F0000 		.word	4072
 1866 0090 D70F0000 		.word	4055
 1867 0094 C10F0000 		.word	4033
 1868 0098 A60F0000 		.word	4006
 1869 009c 870F0000 		.word	3975
 1870 00a0 630F0000 		.word	3939
 1871 00a4 3A0F0000 		.word	3898
 1872 00a8 0D0F0000 		.word	3853
 1873 00ac DB0E0000 		.word	3803
 1874 00b0 A50E0000 		.word	3749
 1875 00b4 6C0E0000 		.word	3692
 1876 00b8 2E0E0000 		.word	3630
 1877 00bc EC0D0000 		.word	3564
 1878 00c0 A70D0000 		.word	3495
 1879 00c4 5E0D0000 		.word	3422
 1880 00c8 120D0000 		.word	3346
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 64


 1881 00cc C30C0000 		.word	3267
 1882 00d0 710C0000 		.word	3185
 1883 00d4 1C0C0000 		.word	3100
 1884 00d8 C40B0000 		.word	3012
 1885 00dc 6A0B0000 		.word	2922
 1886 00e0 0F0B0000 		.word	2831
 1887 00e4 B10A0000 		.word	2737
 1888 00e8 510A0000 		.word	2641
 1889 00ec F1090000 		.word	2545
 1890 00f0 8E090000 		.word	2446
 1891 00f4 2B090000 		.word	2347
 1892 00f8 C8080000 		.word	2248
 1893 00fc 63080000 		.word	2147
 1894 0100 FF070000 		.word	2047
 1895 0104 9B070000 		.word	1947
 1896 0108 36070000 		.word	1846
 1897 010c D3060000 		.word	1747
 1898 0110 70060000 		.word	1648
 1899 0114 0D060000 		.word	1549
 1900 0118 AD050000 		.word	1453
 1901 011c 4D050000 		.word	1357
 1902 0120 EF040000 		.word	1263
 1903 0124 94040000 		.word	1172
 1904 0128 3A040000 		.word	1082
 1905 012c E2030000 		.word	994
 1906 0130 8D030000 		.word	909
 1907 0134 3B030000 		.word	827
 1908 0138 EC020000 		.word	748
 1909 013c A0020000 		.word	672
 1910 0140 57020000 		.word	599
 1911 0144 12020000 		.word	530
 1912 0148 D0010000 		.word	464
 1913 014c 92010000 		.word	402
 1914 0150 59010000 		.word	345
 1915 0154 23010000 		.word	291
 1916 0158 F1000000 		.word	241
 1917 015c C4000000 		.word	196
 1918 0160 9B000000 		.word	155
 1919 0164 77000000 		.word	119
 1920 0168 58000000 		.word	88
 1921 016c 3D000000 		.word	61
 1922 0170 27000000 		.word	39
 1923 0174 16000000 		.word	22
 1924 0178 09000000 		.word	9
 1925 017c 02000000 		.word	2
 1926 0180 00000000 		.word	0
 1927 0184 02000000 		.word	2
 1928 0188 09000000 		.word	9
 1929 018c 16000000 		.word	22
 1930 0190 27000000 		.word	39
 1931 0194 3D000000 		.word	61
 1932 0198 58000000 		.word	88
 1933 019c 77000000 		.word	119
 1934 01a0 9B000000 		.word	155
 1935 01a4 C4000000 		.word	196
 1936 01a8 F1000000 		.word	241
 1937 01ac 23010000 		.word	291
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 65


 1938 01b0 59010000 		.word	345
 1939 01b4 92010000 		.word	402
 1940 01b8 D0010000 		.word	464
 1941 01bc 12020000 		.word	530
 1942 01c0 57020000 		.word	599
 1943 01c4 A0020000 		.word	672
 1944 01c8 EC020000 		.word	748
 1945 01cc 3B030000 		.word	827
 1946 01d0 8D030000 		.word	909
 1947 01d4 E2030000 		.word	994
 1948 01d8 3A040000 		.word	1082
 1949 01dc 94040000 		.word	1172
 1950 01e0 EF040000 		.word	1263
 1951 01e4 4D050000 		.word	1357
 1952 01e8 AD050000 		.word	1453
 1953 01ec 0D060000 		.word	1549
 1954 01f0 70060000 		.word	1648
 1955 01f4 D3060000 		.word	1747
 1956 01f8 36070000 		.word	1846
 1957 01fc 9B070000 		.word	1947
 1958              		.global	hdma_tim2_ch1
 1959              		.section	.bss.hdma_tim2_ch1,"aw",%nobits
 1960              		.align	2
 1963              	hdma_tim2_ch1:
 1964 0000 00000000 		.space	96
 1964      00000000 
 1964      00000000 
 1964      00000000 
 1964      00000000 
 1965              		.global	htim3
 1966              		.section	.bss.htim3,"aw",%nobits
 1967              		.align	2
 1970              	htim3:
 1971 0000 00000000 		.space	72
 1971      00000000 
 1971      00000000 
 1971      00000000 
 1971      00000000 
 1972              		.global	htim2
 1973              		.section	.bss.htim2,"aw",%nobits
 1974              		.align	2
 1977              	htim2:
 1978 0000 00000000 		.space	72
 1978      00000000 
 1978      00000000 
 1978      00000000 
 1978      00000000 
 1979              		.text
 1980              	.Letext0:
 1981              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1982              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1983              		.file 5 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1984              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1985              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1986              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1987              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1988              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 66


 1989              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1990              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1991              		.file 13 "Core/Inc/lcd_stm32f4.h"
 1992              		.file 14 "Core/Inc/main.h"
 1993              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1994              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1995              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1996              		.file 18 "<built-in>"
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 67


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:192    .text.MX_GPIO_Init:000000d4 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:200    .text.MX_DMA_Init:00000000 $t
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:205    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:254    .text.MX_DMA_Init:00000030 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:259    .text.Error_Handler:00000000 $t
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:265    .text.Error_Handler:00000000 Error_Handler
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:297    .text.MX_TIM2_Init:00000000 $t
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:302    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:532    .text.MX_TIM2_Init:000000fc $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1977   .bss.htim2:00000000 htim2
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1152   .data.TIM2_Ticks:00000000 TIM2_Ticks
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1963   .bss.hdma_tim2_ch1:00000000 hdma_tim2_ch1
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:541    .text.MX_TIM3_Init:00000000 $t
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:546    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:699    .text.MX_TIM3_Init:0000009c $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1970   .bss.htim3:00000000 htim3
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:705    .text.SystemClock_Config:00000000 $t
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:711    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:840    .text.SystemClock_Config:00000084 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:846    .rodata.main.str1.4:00000000 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:850    .text.main:00000000 $t
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:856    .text.main:00000000 main
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:954    .text.main:00000070 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1829   .data.sine_LUT:00000000 sine_LUT
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:963    .text.EXTI0_IRQHandler:00000000 $t
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:969    .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1076   .text.EXTI0_IRQHandler:00000080 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1092   .bss.last_button_press:00000000 last_button_press
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1098   .bss.waveform_index:00000000 waveform_index
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1133   .data.waveforms:00000000 waveforms
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1121   .data.waveform_names:00000000 waveform_names
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1089   .bss.last_button_press:00000000 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1099   .bss.waveform_index:00000000 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1102   .rodata.str1.4:00000000 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1118   .data.waveform_names:00000000 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1130   .data.waveforms:00000000 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1695   .data.saw_LUT:00000000 saw_LUT
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1561   .data.triangle_LUT:00000000 triangle_LUT
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1427   .data.piano_LUT:00000000 piano_LUT
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1293   .data.guitar_LUT:00000000 guitar_LUT
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1159   .data.drum_LUT:00000000 drum_LUT
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1145   .data.DestAddress:00000000 DestAddress
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1142   .data.DestAddress:00000000 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1149   .data.TIM2_Ticks:00000000 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1156   .data.drum_LUT:00000000 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1290   .data.guitar_LUT:00000000 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1424   .data.piano_LUT:00000000 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1558   .data.triangle_LUT:00000000 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1692   .data.saw_LUT:00000000 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1826   .data.sine_LUT:00000000 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1960   .bss.hdma_tim2_ch1:00000000 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1967   .bss.htim3:00000000 $d
C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s:1974   .bss.htim2:00000000 $d
ARM GAS  C:\Users\Abongile\AppData\Local\Temp\ccMYOO0L.s 			page 68



UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
HAL_DMA_Init
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
init_LCD
HAL_TIM_PWM_Start
HAL_TIM_OC_Start
HAL_DMA_Start_IT
lcd_putstring
HAL_Delay
HAL_GetTick
HAL_DMA_Abort_IT
HAL_TIM_OC_Start_DMA
lcd_command
